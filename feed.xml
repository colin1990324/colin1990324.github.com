<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Wu Rui's Home</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://wurui.cc/feed.xml" />
<link rel="alternate" type="text/html" href="http://wurui.cc" />
<updated>2015-07-03T14:52:57+08:00</updated>
<id>http://wurui.cc/</id>
<author>
  <name>Wu Rui</name>
  <uri>http://wurui.cc/</uri>
  <email>ruiwu1990324@gmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[黄龙溪小游]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/huanglongxi/" />
  <id>http://wurui.cc/life/huanglongxi</id>
  <published>2015-06-29T22:35:24+08:00</published>
  <updated>2015-06-29T22:35:24+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5864-6150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5878-8150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;不时有竹筏往来湖水中，不下水湿身也得了亲近水的机会。荷花正好，伴着悠扬的乐曲，静静的享受夏日。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5863-5150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5876-7150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5843-4150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5889-9150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;园园今天颇有大家风范，车上安安静静，人多的地方也不乱跑乱吠。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5925-10150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5928-11150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5936-12150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5938-13150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5808-3150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;穿镇而过的河道，水浅而清澈，成了酷暑中的天堂。大人小孩都装备着水枪，你来我往，相互泼洒着欢乐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5940-14150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;一根面，不知何时成了黄龙溪的标配了。夏日里，吃点凉粉凉面，实惠又巴适！&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/huanglongxi/&quot;&gt;黄龙溪小游&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on June 29, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[D3 实战练手]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/d3-js/" />
  <id>http://wurui.cc/tech/d3-js</id>
  <published>2015-06-17T09:21:17+08:00</published>
  <updated>2015-06-17T09:21:17+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;工作相关，了解流行的可视化库，（如百度echarts，GoogleCharts，Gephi等）最后还是&lt;a href=&quot;https://github.com/mbostock/d3/wiki/Gallery&quot;&gt;D3 Gallery&lt;/a&gt;的诸多Demo惊艳了我。简单介绍后带来我的实战。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3是一个基于数据操作文档JavaScript库。D3帮助你给数据带来活力通过使用HTML、SVG和CSS。D3重视Web标准为你提供现代浏览器的全部功能，而不是给你一个专有的框架。结合强大的可视化组件和数据驱动方式操作Dom。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3允许绑定任何数据到DOM对象模型，然后应用数据驱动转换到文档。例如：你可以用D3从数组生成HTML表格，或者使用相同数据平滑和动态创建一个SVG图表。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3不是一个庞大的框架，像想象那样提供许多功能。相反，D3解决这关键问题：基于数据文档高效操作。避免专有的表现，同时提供良好适应性。公开全部功能，如CSS3、HTML5和SVG网页标准，很少的开销，D3速度非常快。支持大数据集和动态交互和动画效果。D3的功能设计允许代码重用，通过集合不同的组件和插件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: right;&quot;&gt;引用自&lt;a href=&quot;http://segmentfault.com/a/1190000000701746&quot;&gt;小渝人儿&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;实战一 标签云&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/word_cloud.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/word-cloud/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;首先是数据准备，我用Java写了一个采集全站高频词的&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/WordCloud/WordFrequency.java&quot;&gt;程序&lt;/a&gt;，输出一个&amp;lt;单词，字号&amp;gt;的map，让高频的词有更大的字体。&lt;/p&gt;

&lt;p&gt;数据采集过程需要注意的是对中文进行分词，Stopwords的排除以及根据词频计算字号。&lt;/p&gt;

&lt;p&gt;然后我们使用D3的布局函数d3.layout.cloud.js。再根据map设置字号，颜色随机就可以了~&lt;/p&gt;

&lt;h3 id=&quot;sunburst&quot;&gt;实战二 Sunburst&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/sunburst.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/sunburst/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sunburst不知道怎么翻译好，光芒？简而言之是一个圆盘的多级结构，也可以说是一个变异的树结构。&lt;/p&gt;

&lt;p&gt;同样写一个&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/Sunburst/Sunburst.java&quot;&gt;程序&lt;/a&gt;来获取数据。这次进步一点，把数据放在一个json文件中。这里我想展示一个博客-分类-文章的多级结构，最外圈每一个扇形的大小由文章的字节数来确定。内圈的累计计算由D3自动完成。&lt;/p&gt;

&lt;p&gt;绘制部分感谢&lt;a href=&quot;http://bl.ocks.org/mbostock/4348373&quot;&gt;bl.ocks.org&lt;/a&gt;，这次没有现成的layout，基本靠画圈圈来完成的。&lt;/p&gt;

&lt;p&gt;给每个部分加上标签坡费了我一番周折，最后还是没有理解mousemove事件返回的鼠标位置到底在哪儿，如果知道怎么调，欢迎留言。&lt;/p&gt;

&lt;h3 id=&quot;geo-map&quot;&gt;实战三 Geo Map&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/travel-china.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/travel-china/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在页面上绘制地图，这里每一条边都是现场绘制出来的哦。数据源请搜索“GeoJson china”（&lt;a href=&quot;https://github.com/colin1990324/colin1990324.github.io/tree/master/travel-china/Map_files&quot;&gt;懒人请进&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;源码简单易懂，值得一提的球体经纬度如何投影到二维平面上，这里使用常见的墨卡托投影。投影方式千奇百怪，世界中心到底在哪，有兴趣的同学可以&lt;a href=&quot;http://www.zhihu.com/question/27614116&quot;&gt;看一看&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var projection = d3.geo.mercator()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加一个map，根据我到过的省份频次给不同区块上色。&lt;/p&gt;

&lt;p&gt;然后添加了简单的交互，类似刮刮乐，鼠标扫过便能揭开真相！&lt;/p&gt;

&lt;h3 id=&quot;chord-diagram&quot;&gt;实战四 Chord Diagram&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/chord.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/chord/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chord既是和弦的意思，第一次看到这种类型的图时简直闪瞎我的狗眼，惹得我非常想自己做一个。&lt;/p&gt;

&lt;p&gt;这个类型的图非常适合点对点的数据类型，比如&lt;a href=&quot;http://bost.ocks.org/mike/uberdata/&quot;&gt;Uber流量图&lt;/a&gt;。那我一个小博客，页面间跳转少的可怜，做个河图还可以，怎么也撑不起chord。哪里去找点对点的数据呢？最后我非常无耻的选择了pairwise document similarities。。。即博文间的相似度。。。。&lt;/p&gt;

&lt;p&gt;这里又用到一些简单的自然语言处理方法（包括前面的stopwords）。用TF-IDF建立向量，简单的用余弦值来作相似度。&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/chordDiagram/TfIdfMain.java&quot;&gt;程序&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D3提供现成的d3.layout.chord，调用即可，每条弦的宽度会根据你带入的值自动计算。再给不同分类的文章加上颜色，炫酷的Chord Diagram就出炉啦！&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;小结&lt;/h3&gt;

&lt;p&gt;四篇实战之后，对D3的select, layout, data import, text, event, 回调函数有了简单的认识。&lt;/p&gt;

&lt;p&gt;像我这样的前端小白也能成功做出一定的效果，这突显了D3的易用性。还没有体验过的朋友一定不要错过！做出了漂亮的效果也不要忘了留言分享哦~&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/d3-js/&quot;&gt;D3 实战练手&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on June 17, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[可视化网络 Gephi]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/gephi/" />
  <id>http://wurui.cc/tech/gephi</id>
  <published>2015-06-11T16:16:47+08:00</published>
  <updated>2015-06-11T16:16:47+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/firewall_sigma_circle.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gephi是一个全平台的交互式可视化平台，它特别适用于复杂的大数据可视化工作。&lt;a href=&quot;http://gephi.github.io/&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;实时可视化&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;http://gephi.github.io/images/screenshots/select-tool-mini.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gephi使用的高速引擎可以快速迭代出你想要的图像。&lt;/li&gt;
  &lt;li&gt;超大网络，从5w节点到100w节点都可以支持。&lt;/li&gt;
  &lt;li&gt;大量可用工具。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;高效简易的布局工具&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;http://gephi.github.io/images/screenshots/layout1.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对复杂图进行布局是一个困难的问题，而Gephi提供了最简易高效的布局算法。软件还支持在迭代的同时移动单个或是一片节点。你还可以在market中下载更多的plugin，其中也包括了来自不同开发者的其他布局算法。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gephi.github.io/features/&quot;&gt;简单翻译自 Gephi Features&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;快速入门&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gephi.github.io/tutorials/gephi-tutorial-quick_start.pdf&quot;&gt;原始文档&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;图数据导入&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;Gephi支持所有主流的图数据格式导入，例如GEFX，GraphML，GML。同时也支持简单的CSV格式导入，缺点是只认前三列，不方便添加Label或者其他属性。如果你在使用neo4j，可以使用neo4j-shell来导出图数据。如果以上方法都不合适，可以找到以上几种文件的格式，自己生产图文件。我有一些简单程序，有需要的可以留言。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.49.48%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;布局算法&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;在左下角有布局算法区，大可以随意尝试几种不同的算法和参数，点击run看看效果~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.50.10%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;常用的汇聚算法有ForceAtlas，ForceAtlas2。分散法有Fruchterman。如果是Community比较分散的情况，Yifan Hu有不错的效果。&lt;/p&gt;

&lt;p&gt;参数比较常用的有scale控制大小，speed控制迭代的速度和精度。有的算法也提供一个noverlap选项。&lt;/p&gt;

&lt;h4 id=&quot;ranking&quot;&gt;Ranking&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;左中部有常用的Ranking功能，此功能够对节点的小大，颜色；边的颜色，粗细进行调节。一般进行完布局和大小调节以后，你的图就有了一定的信息量和可读性了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.46.45%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;统计和分割&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;在窗口右边有各种统计功能，举个例子，像Modularity，能够对数据进行聚类，聚类的数据可以在子窗口调节。获得结果之后可以使用Ranking左边的Partition功能，这里提供根据之前的结果进行配色的方案。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.55.04%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;preview&quot;&gt;预览（Preview）&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;之前的操作都是在Overview视图中进行的，Gephi的预览视图提供了多套更为生动的整体配色模板。你也可以对具体的参数进行调节。在左下方有导出选项。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.58.34%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data-laboratory&quot;&gt;数据实验室（Data Laboratory）&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;数据实验室提供对具体数据进行操作的视图，然后并不怎么好用，推荐还是在生成导入文件的时候把需要的属性、标签都加入。Partition部分也支持使用标签来进行分类配色。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%205.01.53%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;sigmajs&quot;&gt;Sigma.js&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;如果你对sigma.js很熟悉，或者希望得到能够在网页动态展示的数据，或者neo4j的展示能力不能满足你的需要，那sigma plugin就很对你的胃口。文章第一张图和下面这张是我生成的图在sigma.js上展示的效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/firewall_sigma.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里要允许chrome从本地获取文件，在mac上的用法是 1 先关闭所有的chrome进程，2 带参数启动chrome。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/Applications/Google&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Chrome.app/Contents/MacOS/Google&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Chrome --allow-file-access-from-files&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/gephi/&quot;&gt;可视化网络 Gephi&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on June 11, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[New Domain and Web Site]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/new-domain-and-web-site/" />
  <id>http://wurui.cc/tech/new-domain-and-web-site</id>
  <published>2015-05-27T17:06:02+08:00</published>
  <updated>2015-05-27T17:06:02+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;After the expiration of ruiwu.me, I’m looking for a new cheap solution for my personal blog. The original AWS EC2 &amp;amp; Wordpress solution is a little bit expensive for individuals and I know one of my friend &lt;a href=&quot;http://hackecho.com/&quot;&gt;Zhaoyu&lt;/a&gt; is using a Github &amp;amp; Jekyll solution. Since all those services are free and I bought the new domain wurui.cc for 7 years at the price 318 rmb, this solution should be easy and reasonable.&lt;/p&gt;

&lt;p&gt;So you can find lots of instructions for set up a blog on github.
Here gives the outline and some links I used.&lt;/p&gt;

&lt;h3 id=&quot;set-up-github&quot;&gt;Set up Github&lt;/h3&gt;

&lt;p&gt;If you don’t have a github account. &lt;a href=&quot;https://github.com/join&quot;&gt;Click&lt;/a&gt; to register.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/set-up-git/&quot;&gt;Github getting started&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;start-your-blog-from-fork&quot;&gt;Start your blog from fork&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2014/08/01/build-blog-jekyll-github-pages/&quot;&gt;Build A Blog With Jekyll And GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-theme-i-use&quot;&gt;The theme I use&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://mmistakes.github.io/so-simple-theme/theme-setup/&quot;&gt;So Simple Theme&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;getting-around&quot;&gt;Getting around&lt;/h3&gt;

&lt;p&gt;If you use plugins that are not officially supported, you need manualy deploy your pages. &lt;a href=&quot;http://www.sitepoint.com/jekyll-plugins-github/&quot;&gt;Here’s a way around&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found this one easier to understand later. &lt;a href=&quot;http://charliepark.org/jekyll-with-plugins/&quot;&gt;Charlie Park&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;import-from-your-old-wordpress-site&quot;&gt;import from your old Wordpress site&lt;/h3&gt;

&lt;p&gt;Here’s a nice tool &lt;a href=&quot;http://www.adamwadeharris.com/how-to-convert-a-wordpress-site-to-jekyll-with-github-pages/&quot;&gt;jekyll-import&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;中文指南&lt;/h3&gt;

&lt;p&gt;qianjiye.de &lt;a href=&quot;http://qianjiye.de/2012/07/host-your-pages-at-github-using-jekyll/&quot;&gt;基于Jekyll的GitHub建站指南&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cellier.me &lt;a href=&quot;http://www.cellier.me/2015/01/04/jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/&quot;&gt;每个人都应该有一个Jekyll博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9leg.com &lt;a href=&quot;http://9leg.com/other/2015/01/15/optimization-of-jekyll-blog-access-slow-problem.html&quot;&gt;优化Jekyll博客访问慢的问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wuxiaolong.me &lt;a href=&quot;http://wuxiaolong.me/github/2014/10/30/qiniu-photo-bed/&quot;&gt;七牛做cdn加速或者做图床&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;liberize.me &lt;a href=&quot;http://liberize.me/tech/jekyll-add-back-to-top-button.html&quot;&gt;返回顶部按钮&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/new-domain-and-web-site/&quot;&gt;New Domain and Web Site&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Hello World]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/hello-world/" />
  <id>http://wurui.cc/blog/hello-world</id>
  <published>2015-05-27T15:39:55+08:00</published>
  <updated>2015-05-27T15:39:55+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;这是雏龙的一声怒吼，wurui.cc 今天上线啦！这标志着即上代主页ruiwu.me之后，更轻巧，更持久的新生主页的破壳而出，惊动天地，紫云东方！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/QR_Preview.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/hello-world/&quot;&gt;Hello World&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Light Up]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/light-up/" />
  <id>http://wurui.cc/life/light-up</id>
  <published>2015-02-04T12:18:04+08:00</published>
  <updated>2015-02-04T12:18:04+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2015-35-17.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Feb 4th 2015, snow before sunset, street lamp just up, a quiet day at home. Photoed outside my apartment, Tara, Columbia, MO.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/light-up/&quot;&gt;Light Up&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on February 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[2014 MIZZOU Homecoming]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/2014-mizzou-homecoming/" />
  <id>http://wurui.cc/life/2014-mizzou-homecoming</id>
  <published>2015-02-04T12:17:38+08:00</published>
  <updated>2015-02-04T12:17:38+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;This Saturday we had the Homecoming Parade and I tried to comprehend a little bit of Documentary Photography.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-6.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-12.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-287.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-162.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-21.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014_32-193.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/2014-mizzou-homecoming/&quot;&gt;2014 MIZZOU Homecoming&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on February 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Horseshoe Canyon Ranch]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/horseshoe-canyon-ranch/" />
  <id>http://wurui.cc/life/horseshoe-canyon-ranch</id>
  <published>2014-10-19T12:11:49+08:00</published>
  <updated>2014-10-19T12:11:49+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-31-13.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This weekend I went to Horseshoe Canyon Ranch, a fantastic place for climbers, with MU climbing club. We slept under beautiful starry sky, set up the largest campfire among all groups on the mountain and climbed some cool rocks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-27.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-9.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-26.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-29.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-11.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014 31-15.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/horseshoe-canyon-ranch/&quot;&gt;Horseshoe Canyon Ranch&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on October 19, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[G高达定格——《自恋刑警》神同步]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/gundam-figure-animation/" />
  <id>http://wurui.cc/life/gundam-figure-animation</id>
  <published>2014-10-04T12:10:16+08:00</published>
  <updated>2014-10-04T12:10:16+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;百看不腻啊，每次都笑死了&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/ZHMDAslnH4M?feature=oembed&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;然后我还把《自恋刑警》看了一遍。。。&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/gundam-figure-animation/&quot;&gt;G高达定格——《自恋刑警》神同步&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on October 04, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[舞者]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/dancer/" />
  <id>http://wurui.cc/blog/dancer</id>
  <published>2014-09-27T12:04:34+08:00</published>
  <updated>2014-09-27T12:04:34+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;要是舞者不能跳舞的话，那活着也就没什么意思了。&lt;/p&gt;

&lt;p&gt;她把食指按在嘴唇上，眼中回想着故事情节开始陈述起来。&lt;/p&gt;

&lt;p&gt;“那个女孩子有一个仰慕的男性。那是个新涌现的政治家，那女孩无论如何都想让他在改选中胜出。她妈妈很有钱，听了女儿的愿望后，就提出要向那个政治家援助资金。但是他却非常气愤，他不想被孩子的一时高兴所利用。”&lt;/p&gt;

&lt;p&gt;“这心情可以理解。”加贺说。&lt;/p&gt;

&lt;p&gt;“然后她妈妈就向他道明了事情原委，原来那个女孩患了白血病，已经不能活多久了，所以想在她的有生之年为其实现更多的愿望。而且那个女孩儿也知道自己的病。于是那个年轻政治家就答应了她们母女俩的要求。两人还进行了短途旅行。而在旅行途中得知正在上演‘核桃夹子’的舞剧后，他和主办方进行了交涉，并得到了允许让那个女孩儿出演。总彩排的时候那个女孩儿展现了完美的舞姿，赢得了大家的掌声。女孩儿高兴地说，明天就是正式演出了，在舞台上跳舞真像做梦一样啊。”&lt;/p&gt;

&lt;p&gt;“然而，”未绪接着说，“在回家的地铁上她的病犯了，妈妈我头痛——随即她就死去了。不过在她留下的日记上她写着：请不要为我的死而悲伤。之后那个年轻政治家也赢得了选举。”&lt;/p&gt;

&lt;p&gt;“真是伤感的故事。”&lt;/p&gt;

&lt;p&gt;“嗯，但是，”未绪说，“但我觉得并不令人沮丧，完美地完成舞蹈，到明天就可以放心离世了，虽说她那么年轻就死去很可怜，但作为一个舞者，她死而无憾。”&lt;/p&gt;

&lt;p&gt;————《沉睡的森林》&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/9787544256988.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/dancer/&quot;&gt;舞者&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on September 27, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Run Walter, Run!!!]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/run-walter-run/" />
  <id>http://wurui.cc/life/run-walter-run</id>
  <published>2014-09-23T11:54:33+08:00</published>
  <updated>2014-09-23T11:54:33+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Siracusa, Sicily (ITALY). Walter, is a Labrador. He’s a special dog, who really loves the sea!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/UowkIRSDHfs&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/run-walter-run/&quot;&gt;Run Walter, Run!!!&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on September 23, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Microsoft Coding Competition - University of Missouri III]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-3/" />
  <id>http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-3</id>
  <published>2014-09-23T11:52:20+08:00</published>
  <updated>2014-09-23T11:52:20+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Here are two problems value 1 point each. Most team can get these 2 points and I spent 30 minutes on each one.&lt;/p&gt;

&lt;h2 id=&quot;question-five-a-variation-on-anagrams--1-points&quot;&gt;Question Five A variation on anagrams | 1 point(s)&lt;/h2&gt;

&lt;p&gt;Let’s assume you were recently hired by a Start-up. On the first day, you meet the CEO and are given an assignment. Your CEO has decided that all products will be named according to the following pattern.&lt;/p&gt;

&lt;p&gt;Your CEO calls the pattern “P@tter”. Two product names obey P@tter if they are permutations of each other, ignoring spaces and capitalization.
Your task is to determine whether two product names obey P@tter.&lt;/p&gt;

&lt;p&gt;Input description/format
The input will consist of two product names per line, in quotation marks, which are not part of the names. The quoted names will be separated by a comma and potentially whitespace.
You can assume that there will be ≤ 1000 lines in the input file. Also, product name length will be ≤ 255 characters and product names will contain only ASCII characters.&lt;/p&gt;

&lt;p&gt;Output description/format
For each line of input, output the result in one of the following 2 ways (case sensitive):
Valid Pattern
Invalid Pattern&lt;/p&gt;

&lt;p&gt;Example input&lt;/p&gt;

&lt;p&gt;“Calculate”, “Acute Call”&lt;/p&gt;

&lt;p&gt;“Drop Cue” , “Cued Pro”&lt;/p&gt;

&lt;p&gt;“carE Not”, “raCe On”&lt;/p&gt;

&lt;p&gt;Example output&lt;/p&gt;

&lt;p&gt;Valid Pattern&lt;/p&gt;

&lt;p&gt;Valid Pattern&lt;/p&gt;

&lt;p&gt;Invalid Pattern&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/LeetCode/blob/master/src/microsoftCodingCompetition2014/VriationOnAnagrams.java&quot;&gt;My Solution in Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is kind of straight forward. First you decompose each input and then tell if they are anagrams or not.&lt;/p&gt;

&lt;h2 id=&quot;question-six-detecting-unreachable-instructions--1-points&quot;&gt;Question Six Detecting unreachable instructions | 1 point(s)&lt;/h2&gt;

&lt;p&gt;Untouched instructions in code can cause some serious problems. You may have heard about a recent security hole related to this topic. Your task is to write a small program that catches the “untouched” lines of code written in our simplified programming language. The program starts at line 1. You may assume the program will be terminated if it infinitely loops or continues past its last instruction.&lt;/p&gt;

&lt;p&gt;Input description/format
Each line of input contains an instruction (NEXT or GOTO).
NEXT: the program will move to the next line.
GOTO X: the program will go to line number X.&lt;/p&gt;

&lt;p&gt;Output description/format
Please print out the line number of instructions that the program doesn’t touch (one line number per line in the output file).&lt;/p&gt;

&lt;p&gt;Example input&lt;/p&gt;

&lt;p&gt;NEXT&lt;/p&gt;

&lt;p&gt;NEXT&lt;/p&gt;

&lt;p&gt;GOTO 5&lt;/p&gt;

&lt;p&gt;NEXT&lt;/p&gt;

&lt;p&gt;GOTO 1&lt;/p&gt;

&lt;p&gt;NEXT&lt;/p&gt;

&lt;p&gt;Example output&lt;/p&gt;

&lt;p&gt;4&lt;/p&gt;

&lt;p&gt;6&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/LeetCode/blob/master/src/microsoftCodingCompetition2014/DetectingUnreachableInstructions.java&quot;&gt;My Solution in Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This instructions structure is like a linked list. First store all instructions with its line number in a set. Execute instructions and remove executed one from the set. if there’s no next instruction or next instruction is already removed from the set( means loop happens), stop execution.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-3/&quot;&gt;Microsoft Coding Competition - University of Missouri III&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on September 23, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Microsoft Coding Competition - University of Missouri II]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-2/" />
  <id>http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-2</id>
  <published>2014-09-23T11:52:20+08:00</published>
  <updated>2014-09-23T11:52:20+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Here posts  3 problems without solution.&lt;/p&gt;

&lt;h2 id=&quot;question-two-odata-service--2-points&quot;&gt;Question Two OData service | 2 point(s)&lt;/h2&gt;

&lt;p&gt;The Open Data Protocol (OData) is a data access protocol created by Microsoft that builds on simple REST principles. Your task is to retrieve certain data from a sample (live) OData service. For this problem you will be working with the OData service located &lt;a href=&quot;http://services.odata.org/Northwind/Northwind.svc/&quot;&gt;here&lt;/a&gt;. You will retrieve data from an entity set called ‘Products’. An entity set is equivalent to a table in a relational database. The Products entity set is located &lt;a href=&quot;http://services.odata.org/Northwind/Northwind.svc/Products&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your input file will consist of a series of simple queries to perform on the Products entity set. The input will contain a $filter expression to perform on Products. This is equivalent to a WHERE clause in SQL. Your job is simply to see how many entities (rows in a table) are returned from the specified query.&lt;/p&gt;

&lt;p&gt;Normally a request to the endpoint specified above would return product data - but since you are only interested in the number of entities that would be returned, you can send requests to this special &lt;a href=&quot;http://services.odata.org/Northwind/Northwind.svc/Products/$count&quot;&gt;$count endpoint&lt;/a&gt;. After sending an appropriate request to this endpoint, it will respond with the number of entities that match the query. Print out this value on a line in the output file. Your output file will have one line per line of input containing one number.&lt;/p&gt;

&lt;p&gt;Input description/format
The input will be a series of $filter queries to perform. Each line of input will correspond to a single query. For instance, the input line: Discontinued eq true should send a GET request to the following URL: http://services.odata.org/Northwind/Northwind.svc/Products/$count?$filter=Discontinued eq true&lt;/p&gt;

&lt;p&gt;Output description/format
Your output will be a single number per line of input, indicating how many entities match the given query.&lt;/p&gt;

&lt;p&gt;Example input&lt;/p&gt;

&lt;p&gt;Discontinued eq true&lt;/p&gt;

&lt;p&gt;SupplierID eq 4&lt;/p&gt;

&lt;p&gt;CategoryID eq 2&lt;/p&gt;

&lt;p&gt;Example output&lt;/p&gt;

&lt;p&gt;8&lt;/p&gt;

&lt;p&gt;3&lt;/p&gt;

&lt;p&gt;12&lt;/p&gt;

&lt;h2 id=&quot;question-three-unicode-email-addresses--2-points&quot;&gt;Question Three Unicode email addresses | 2 point(s)&lt;/h2&gt;

&lt;p&gt;With the expansion of the Internet across the world, the demand is growing for everyone to have an email address. Until everyone is ready to use international characters, you are now in charge of writing a converter that will take UTF-8 characters and bring them back to something DNS servers will be able to handle.
To do so, you must take an email string and break it into 3 pieces: first@second.third. Process each piece as follows: Leave all characters that have ASCII codes between 33 and 126 as is, except convert uppercase letters to lowercase letters Represent all other characters (referred to hereinafter as special characters) using the format +position?UTF-8_hexadecimal_representation The position is the 0-indexed position of the represented character The UTF-8 hexadecimal representation must not contain spaces and must be finalized If at least one special character was present in the string, append a ~ and each special character at the end of the address.&lt;/p&gt;

&lt;p&gt;For example, the piece Pøpø would be processed to pp+1?C3B8+3?C3B8~øø
Clarifications
There shouldn’t be any spaces.
You will receive only characters contained within the UTF-8 standard&lt;/p&gt;

&lt;p&gt;Input description/format&lt;/p&gt;

&lt;p&gt;Each line will be an email address with Unicode characters.&lt;/p&gt;

&lt;p&gt;Output description/format&lt;/p&gt;

&lt;p&gt;new email address composition characters removed in order&lt;/p&gt;

&lt;p&gt;Example input&lt;/p&gt;

&lt;p&gt;WoRlD_ReAdY@Microsoft.COM&lt;/p&gt;

&lt;p&gt;Café@Chaud.tôt&lt;/p&gt;

&lt;p&gt;Trinitŷ@߷.com&lt;/p&gt;

&lt;p&gt;ա@մ.կ&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-2/&quot;&gt;Microsoft Coding Competition - University of Missouri II&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on September 23, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Microsoft Coding Competition - University of Missouri I]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-1/" />
  <id>http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-1</id>
  <published>2014-09-23T11:52:20+08:00</published>
  <updated>2014-09-23T11:52:20+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;This is a Coding Competition MS held at University of Missouri - Columbia on Sep 17th 2014. Similar events will be held in several Universities.&lt;/p&gt;

&lt;p&gt;Team up to 3 people. Six problems are given and you have 2 hours to get as many scores as you can. There’s no partial score for each question. The best strategy I would recommend is starting from the easiest and moving on to harder problems.&lt;/p&gt;

&lt;h2 id=&quot;question-one-cure-the-virus--3-points&quot;&gt;Question One Cure the virus | 3 point(s)&lt;/h2&gt;

&lt;p&gt;There is an outbreak of VirusX in Redmond. The local authorities have discovered a vaccine that protects against infection by VirusX. However, they can only produce so many vaccines per week. Your job is to figure out the best order in which people should be vaccinated. Everyone will get vaccinated, but the people more likely to be sick should be vaccinated first. You are more likely to get sick if the virus` DNA closely matches somewhere in your DNA.&lt;/p&gt;

&lt;p&gt;However, there is a catch: the virus can mutate. Over time, the virus can “cut” letters from its DNA. So it is possible that the AAAAG virus mutates into the AAAG, AAAA, …, A viruses. Removing letters is the only possible mutation: the virus cannot change any letter.&lt;/p&gt;

&lt;p&gt;For example, if your DNA is GGGGGGGAAAAGGGGGG and the virus DNA is AAAAG, you have 1.0 probability of getting infected because all of the letters of the virus are found in the same order in your DNA. If your DNA was TTTTTTTAAAATTTTTT, then the virus only partially matches your DNA. For partial matches, we define the probability to get sick by the numbers of continuous letters of the virus’ DNA that matches your DNA divided by the total number of letters in the un-mutated virus’ DNA. With the example above, AAAA is the longest possible mutation that matches in your DNA, so your probability of getting sick is len(AAAA) / len(AAAAG): 0.8.&lt;/p&gt;

&lt;p&gt;You are provided with the DNA of every inhabitant of Redmond and the virus’ DNA. For every inhabitant, you need to output the order in which he/she should get vaccinated. Everyone that has the same probability to get sick should get vaccinated in the same batch. For example, the order of vaccination for inhabitants with the following probability to get sick: [0.0, 0.5, 0.5, 0.0, 1.0] is: [3, 2, 2, 3, 1].&lt;/p&gt;

&lt;p&gt;Tip
Here is a tip for how to get from the “Canonical Sample Input” to “Canonical Sample Output” (described below). Given the TAAT virus and its highest infection score possible mutation for persons 0 to 4, here are the longest matching mutations and the attached probability to get sick for every person:&lt;/p&gt;

&lt;p&gt;Person #0: T, 0.250&lt;/p&gt;

&lt;p&gt;Person #1: TAA, 0.750&lt;/p&gt;

&lt;p&gt;Person #2: TT, 0.500&lt;/p&gt;

&lt;p&gt;Person #3: TAAT, 1.000&lt;/p&gt;

&lt;p&gt;Person #4: TA, 0.500&lt;/p&gt;

&lt;p&gt;Therefore, person 3 has a 1.0 probability of getting sick, so he or she gets vaccinated first. Person 1 is the next highest, so he or she gets vaccinated second. We continue to vaccinate in batches of probability of getting sick, with person 0 getting vaccinated last because he or she has the least probability to get sick.
Note that what is described above is not the output you should generate, but a tip on how you can get to the desired output inside your code.&lt;/p&gt;

&lt;p&gt;Input description/format&lt;/p&gt;

&lt;p&gt;The first line of the file contains three numbers: the number of citizens in Redmond, the length of the citizen’s DNA and the length of the virus’ DNA.
This is followed by one sequence of DNA per line, representing in order the citizens’ DNA. The last DNA sequence of the file is the virus’ DNA.
You can assume that the virus’ DNA sequence is always shorter than the citizen’s DNA sequences.
Output description/format
The below example becomes clear if we give the “DNA match score” as well as the longest sequence of DNA matched.&lt;/p&gt;

&lt;p&gt;Person #0: G, 0.333&lt;/p&gt;

&lt;p&gt;Person #1: GCC, 1.000&lt;/p&gt;

&lt;p&gt;Person #2: CC, 0.667&lt;/p&gt;

&lt;p&gt;Person #3: GC, 0.667&lt;/p&gt;

&lt;p&gt;Person #4: GC, 0.667&lt;/p&gt;

&lt;p&gt;Person 1 has a 1.0 probability of getting sick, so he gets vaccinated first. Persons 2, 3, and 4 are the next highest probable to get sick, so they get vaccinated second. Person 0 has the least chance to get sick; he gets vaccinated last.&lt;/p&gt;

&lt;p&gt;Example input&lt;/p&gt;

&lt;p&gt;5 10 3&lt;/p&gt;

&lt;p&gt;AGGAAAAGAG&lt;/p&gt;

&lt;p&gt;CGAGGCCAAC&lt;/p&gt;

&lt;p&gt;GACAAAACCG&lt;/p&gt;

&lt;p&gt;GCGACGCAGA&lt;/p&gt;

&lt;p&gt;AACAGCGCAG&lt;/p&gt;

&lt;p&gt;GCC&lt;/p&gt;

&lt;p&gt;Example output&lt;/p&gt;

&lt;p&gt;Person #0: 3.&lt;/p&gt;

&lt;p&gt;Person #1: 1.&lt;/p&gt;

&lt;p&gt;Person #2: 2.&lt;/p&gt;

&lt;p&gt;Person #3: 2.&lt;/p&gt;

&lt;p&gt;Person #4: 2.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/LeetCode/blob/master/src/microsoftCodingCompetition2014/Cure_the_virus.java&quot;&gt;My Solution in Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a competition environment, it’s really easy for people like me to scan the problem description really quick and start coding.  I trade this problem as a typical longest common substring at first glimpse but actually it’s  not. The virus can mutate, letters can be cut out from its sequence while people’s DNA need to be continuos which makes this problem a mix of longest common substring and longest common subsequence.
Then, if you are familiar with DP( Dynamic Program) solution for LCS, you can easily modify it into the correct answer of this problem.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/microsoft-coding-competition-university-of-missouri-1/&quot;&gt;Microsoft Coding Competition - University of Missouri I&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on September 23, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[We Won This Game]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/we-won-this-game/" />
  <id>http://wurui.cc/life/we-won-this-game</id>
  <published>2014-08-31T11:47:21+08:00</published>
  <updated>2014-08-31T11:47:21+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;mizzou-vs-sdsu-8302014&quot;&gt;MIZZOU VS SDSU 8/30/2014&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_IMG_2360.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/we-won-this-game/&quot;&gt;We Won This Game&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on August 31, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[How a Science Experiment Turns Into Art]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/how-a-science-experiment-turns-into-art/" />
  <id>http://wurui.cc/life/how-a-science-experiment-turns-into-art</id>
  <published>2014-04-23T11:42:58+08:00</published>
  <updated>2014-04-23T11:42:58+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/orangeeee.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/Fruit-Battery-Still-Life-Citrus.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From &lt;a href=&quot;http://www.wired.com/2014/04/middle-school-science-experiment-turned-gorgeous-photographs/&quot;&gt;wired.com&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/how-a-science-experiment-turns-into-art/&quot;&gt;How a Science Experiment Turns Into Art&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on April 23, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Google Code Jam 2014]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/google-code-jam-2014/" />
  <id>http://wurui.cc/tech/google-code-jam-2014</id>
  <published>2014-04-12T11:33:08+08:00</published>
  <updated>2014-04-12T11:33:08+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;The Qualification Round of Google Code Jam 2014 just ended. Here shares my solutions on the &lt;a href=&quot;https://github.com/colin1990324/LeetCode/tree/master/src/codejam2014&quot;&gt;Github&lt;/a&gt; for the following problems.&lt;/p&gt;

&lt;p&gt;Google Code Jam 2014 has begun, You need to get 25 points to get to the next round, there are 4 problems out of which two problems needs to be solved for sure to get into next round.&lt;/p&gt;

&lt;h2 id=&quot;problem-a-magic-trick-6pt&quot;&gt;Problem A Magic Trick 6pt&lt;/h2&gt;

&lt;p&gt;Recently you went to a magic show. You were very impressed by one of the tricks, so you decided to try to figure out the secret behind it! The magician starts by arranging 16 cards in a square grid: 4 rows of cards, with 4 cards in each row. Each card has a different number from 1 to 16 written on the side that is showing. Next, the magician asks a volunteer to choose a card, and to tell him which row that card is in. &lt;/p&gt;

&lt;p&gt;Finally, the magician arranges the 16 cards in a square grid again, possibly in a different order. Once again, he asks the volunteer which row her card is in. With only the answers to these two questions, the magician then correctly determines which card the volunteer chose. Amazing, right?&lt;/p&gt;

&lt;p&gt;You decide to write a program to help you understand the magician’s technique. The program will be given the two arrangements of the cards, and the volunteer’s answers to the two questions: the row number of the selected card in the first arrangement, and the row number of the selected card in the second arrangement. The rows are numbered 1 to 4 from top to bottom.
Your program should determine which card the volunteer chose; or if there is more than one card the volunteer might have chosen (the magician did a bad job); or if there’s no card consistent with the volunteer’s answers (the volunteer cheated).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Input
The first line of the input gives the number of test cases, T. T test cases follow. Each test case starts with a line containing an integer: the answer to the first question. The next 4 lines represent the first arrangement of the cards: each contains 4 integers, separated by a single space. The next line contains the answer to the second question, and the following four lines contain the second arrangement in the same format.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Output
For each test case, output one line containing “Case #x: y”, where x is the test case number (starting from 1).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If there is a single card the volunteer could have chosen, y should be the number on the card. If there are multiple cards the volunteer could have chosen, y should be “Bad magician!”, without the quotes. If there are no cards consistent with the volunteer’s answers, y should be “Volunteer cheated!”, without the quotes. The text needs to be exactly right, so consider copying/pasting it from here.&lt;/p&gt;

&lt;p&gt;Limits
1 ≤ T ≤ 100.
1 ≤ both answers ≤ 4.
Each number from 1 to 16 will appear exactly once in each arrangement.&lt;/p&gt;

&lt;p&gt;Sample Input
3
2
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
3
1 2 5 4
3 11 6 15
9 10 7 12
13 14 8 16
2
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
2
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
2
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
3
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 &lt;/p&gt;

&lt;p&gt;Output
Case #1: 7
Case #2: Bad magician!
Case #3: Volunteer cheated!&lt;/p&gt;

&lt;h2 id=&quot;problem-b-cookie-clicker-alpha-8pt11pt&quot;&gt;Problem B Cookie Clicker Alpha 8pt+11pt&lt;/h2&gt;

&lt;p&gt;In this problem, you start with 0 cookies. You gain cookies at a rate of 2 cookies per second, by clicking on a giant cookie. Any time you have at least C cookies, you can buy a cookie farm. Every time you buy a cookie farm, it costs you C cookies and gives you an extra F cookies per second.
Once you have X cookies that you haven’t spent on farms, you win! Figure out how long it will take you to win if you use the best possible strategy.&lt;/p&gt;

&lt;p&gt;Example
Suppose C=500.0, F=4.0 and X=2000.0. Here’s how the best possible strategy plays out: You start with 0 cookies, but producing 2 cookies per second. After 250 seconds, you will have C=500 cookies and can buy a farm that producesF=4 cookies per second. After buying the farm, you have 0 cookies, and your total cookie production is 6 cookies per second. The next farm will cost 500 cookies, which you can buy after about 83.3333333seconds. After buying your second farm, you have 0 cookies, and your total cookie production is 10 cookies per second. Another farm will cost 500 cookies, which you can buy after 50 seconds. After buying your third farm, you have 0 cookies, and your total cookie production is 14 cookies per second. Another farm would cost 500 cookies, but it actually makes sense not to buy it: instead you can just wait until you have X=2000 cookies, which takes about142.8571429 seconds. Total time: 250 + 83.3333333 + 50 + 142.8571429 = 526.1904762 seconds.
Notice that you get cookies continuously: so 0.1 seconds after the game starts you’ll have 0.2 cookies, and π seconds after the game starts you’ll have 2π cookies.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Input
The first line of the input gives the number of test cases, T. T lines follow. Each line contains three space-separated real-valued numbers: C, F and X, whose meanings are described earlier in the problem statement. C, F and X will each consist of at least 1 digit followed by 1 decimal point followed by from 1 to 5 digits. There will be no leading zeroes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Output
For each test case, output one line containing “Case #x: y”, where x is the test case number (starting from 1) and y is the minimum number of seconds it takes before you can have X delicious cookies.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We recommend outputting y to 7 decimal places, but it is not required. y will be considered correct if it is close enough to the correct number: within an absolute or relative error of 10-6. See the FAQ for an explanation of what that means, and what formats of real numbers we accept.&lt;/p&gt;

&lt;p&gt;Limits
1 ≤ T ≤ 100.
Small dataset
1 ≤ C ≤ 500.
1 ≤ F ≤ 4.
1 ≤ X ≤ 2000.
Large dataset
1 ≤ C ≤ 10000.
1 ≤ F ≤ 100.
1 ≤ X ≤ 100000.&lt;/p&gt;

&lt;p&gt;Sample Input
4
30.0 1.0 2.0
30.0 2.0 100.0
30.50000 3.14159 1999.19990
500.0 4.0 2000.0&lt;/p&gt;

&lt;p&gt;Output
Case #1: 1.0000000
Case #2: 39.1666667
Case #3: 63.9680013
Case #4: 526.1904762&lt;/p&gt;

&lt;h2 id=&quot;problem-c-minesweeper-master-11pt24pt&quot;&gt;Problem C Minesweeper Master 11pt+24pt&lt;/h2&gt;

&lt;p&gt;Minesweeper is a computer game that became popular in the 1980s, and is still included in some versions of the Microsoft Windows operating system. This problem has a similar idea, but it does not assume you have played Minesweeper.&lt;/p&gt;

&lt;p&gt;In this problem, you are playing a game on a grid of identical cells. The content of each cell is initially hidden. There are M mines hidden in M different cells of the grid. No other cells contain mines. You may click on any cell to reveal it. If the revealed cell contains a mine, then the game is over, and you lose. Otherwise, the revealed cell will contain a digit between 0 and 8, inclusive, which corresponds to the number of neighboring cells that contain mines. Two cells are neighbors if they share a corner or an edge. Additionally, if the revealed cell contains a 0, then all of the neighbors of the revealed cell are automatically revealed as well, recursively. When all the cells that don’t contain mines have been revealed, the game ends, and you win.&lt;/p&gt;

&lt;p&gt;For example, an initial configuration of the board may look like this (‘&lt;em&gt;’ denotes a mine, and ‘c’ is the first clicked cell):
*..&lt;/em&gt;…&lt;strong&gt;.
….&lt;em&gt;…..
..c..&lt;/em&gt;….
……..&lt;em&gt;.
……….
There are no mines adjacent to the clicked cell, so when it is revealed, it becomes a 0, and its 8 adjacent cells are revealed as well. This process continues, resulting in the following board:
*..&lt;/em&gt;…&lt;/strong&gt;.
1112&lt;em&gt;…..
00012&lt;/em&gt;….
00001111*.
00000001..
At this point, there are still un-revealed cells that do not contain mines (denoted by ‘.’ characters), so the player has to click again in order to continue the game.
You want to win the game as quickly as possible. There is nothing quicker than winning in one click. Given the size of the board (R x C) and the number of hidden mines M, is it possible (however unlikely) to win in one click? You may choose where you click. If it is possible, then print any valid mine configuration and the coordinates of your click, following the specifications in the Output section. Otherwise, print “Impossible”.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Input
The first line of the input gives the number of test cases, T. T lines follow. Each line contains three space-separated integers: R, C, and M.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Output
For each test case, output a line containing “Case #x:”, where x is the test case number (starting from 1). On the following R lines, output the board configuration with C characters per line, using ‘.’ to represent an empty cell, ‘*’ to represent a cell that contains a mine, and ‘c’ to represent the clicked cell.
If there is no possible configuration, then instead of the grid, output a line with”Impossible” instead. If there are multiple possible configurations, output any one of them.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Limits
0 ≤ M &amp;lt; R * C.
Small dataset
1 ≤ T ≤ 230.
1 ≤ R, C ≤ 5.
Large dataset
1 ≤ T ≤ 140.
1 ≤ R, C ≤ 50.&lt;/p&gt;

&lt;p&gt;Sample Input
5
5 5 23
3 1 1
2 2 1
4 7 3
10 10 82
Output
Case #1:
Impossible
Case #2:
c
.
*
Case #3:
Impossible
Case #4:
……*
.c….*
…….
..&lt;em&gt;….
Case #5:
&lt;strong&gt;**&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;*
**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;
&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**
**&lt;/strong&gt;….**
&lt;strong&gt;&lt;em&gt;…..**
**&lt;/em&gt;.c…&lt;/strong&gt;
&lt;strong&gt;&lt;em&gt;….&lt;/em&gt;&lt;/strong&gt;
&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**
**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;
&lt;strong&gt;**&lt;/strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-d-deceitful-war-14pt16pt&quot;&gt;Problem D Deceitful War 14pt+16pt&lt;/h2&gt;

&lt;p&gt;Naomi and Ken sometimes play games together. Before they play, each of them gets N identical-looking blocks of wood with masses between 0.0kg and 1.0kg (exclusive). All of the blocks have different weights. There are lots of games they could play with those blocks, but they usually play something they call War. Here is how War works:
Each player weighs each of his or her own blocks, so each player knows the weights of all of his or her own blocks, but not the weights of the other player’s blocks. They repeat the following process N times: Naomi chooses one of her own blocks, with mass ChosenNaomi. Naomi tells Ken the mass of the block she chose. Ken chooses one of his own blocks, with mass ChosenKen.
They each put their block on one side of a balance scale, and the person whose block is heavier gets one point. Both blocks are destroyed in a fire. Naomi has realized three things about War. First, she has realized that she loses a lot. Second, she has realized that there is a unique strategy that Ken can follow to maximize his points without assuming anything about Naomi’s strategy, and that Ken always uses it. Third, she has realized that she hates to lose. Naomi has decided that instead of playing War, she will play a game she calls Deceitful War. The great thing about Deceitful War is that Ken will think they’re playing War!&lt;/p&gt;

&lt;p&gt;Here is how Deceitful War works, with differences between Deceitful War and War in bold:
Each player weighs each of his or her own blocks. Naomi also weighs Ken’s blocks while he isn’t looking, so Naomi knows the weights of all blocks and Ken only knows the weights of his own blocks.
They repeat the following process N times: Naomi chooses one of her own blocks, with mass ChosenNaomi. Naomi tells Ken a number, ToldNaomi, between 0.0kg and 1.0kg exclusive. Ken, who thinks they’re playing War, thinks the number Naomi just told him is ChosenNaomi. Ken chooses one of his own blocks, with mass ChosenKen. They each put their block on one side of a balance scale, and the person whose block is heavier gets one point. Both blocks are destroyed in a fire. Naomi doesn’t want Ken to know that she isn’t playing War; so when she is choosing which block to play, and what mass to tell Ken, she must make sure that the balance scale won’t reveal that ChosenNaomi ≠ ToldNaomi. In other words, she must make decisions so that: ChosenNaomi, ChosenKen if, and only if, ToldNaomi, ChosenKen, and ToldNaomi is not equal to the mass of any of Ken’s blocks, because he knows that isn’t possible. It might seem like Naomi won’t win any extra points by being deceitful, because Ken might discover that she wasn’t playing War; but Naomi knows Ken thinks both players are playing War, and she knows what he knows, and she knows Ken will always follow his unique optimal strategy for War, so she can always predict what he will play.&lt;/p&gt;

&lt;p&gt;You’ll be given the masses of the blocks Naomi and Ken started with. Naomi will play Deceitful War optimally to gain the maximum number of points. Ken will play War optimally to gain the maximum number of points assuming that both players are playing War. What will Naomi’s score be? What would it have been if she had played War optimally instead?&lt;/p&gt;

&lt;p&gt;Examples
If each player has a single block left, where Naomi has 0.5kg and Ken has 0.6kg, then Ken is guaranteed to score the point. Naomi can’t say her number is ≥ 0.6kg, or Ken will know she isn’t playing War when the balance scale shows his block was heavier.
If each player has two blocks left, where Naomi has [0.7kg, 0.2kg] and Ken has [0.8kg, 0.3kg], then Naomi could choose her 0.2kg block, and deceive Ken by telling him that she chose a block that was 0.6kg. Ken assumes Naomi is telling the truth (as in how the War game works) and will play his 0.8kg block to score a point. Ken was just deceived, but he will never realize it because the balance scale shows that his 0.8kg block is, like he expected, heavier than the block Naomi played. Now Naomi can play her 0.7kg block, tell Ken it is 0.7kg, and score a point. If Naomi had played War instead of Deceitful War, then Ken would have scored two points and Naomi would have scored zero.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Input
The first line of the input gives the number of test cases, T. T test cases follow. Each test case starts with a line containing a single integer N, the number of blocks each player has. Next follows a line containing N space-separated real numbers: the masses of Naomi’s blocks, in kg. Finally there will be a line containing N space-separated real numbers: the masses of Ken’s blocks, in kg.
Each of the masses given to Ken and Naomi will be represented as a 0, followed by a decimal point, followed by 1-5 digits. Even though all the numbers in the input have 1-5 digits after the decimal point, Ken and Naomi don’t know that; so Naomi can still tell Ken that she played a block with mass 0.5000001kg, and Ken has no reason not to believe her.&lt;/li&gt;
  &lt;li&gt;Output
For each test case, output one line containing “Case #x: y z”, where x is the test case number (starting from 1), y is the number of points Naomi will score if she plays Deceitful War optimally, and z is the number of points Naomi will score if she plays War optimally.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Limits
1 ≤ T ≤ 50.
All the masses given to Ken and Naomi are distinct, and between 0.0 and 1.0 exclusive.
Small dataset
1 ≤ N ≤ 10.
Large dataset
1 ≤ N ≤ 1000.&lt;/p&gt;

&lt;p&gt;Sample Input
4
1
0.5
0.6
2
0.7 0.2
0.8 0.3
3
0.5 0.1 0.9
0.6 0.4 0.3
9
0.186 0.389 0.907 0.832 0.959 0.557 0.300 0.992 0.899
0.916 0.728 0.271 0.520 0.700 0.521 0.215 0.341 0.458
Output
Case #1: 0 0
Case #2: 1 0
Case #3: 2 1
Case #4: 8 4&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/google-code-jam-2014/&quot;&gt;Google Code Jam 2014&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on April 12, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[GoPro 360 Degree Video]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/gopro-360-degree-video/" />
  <id>http://wurui.cc/life/gopro-360-degree-video</id>
  <published>2014-04-06T11:24:34+08:00</published>
  <updated>2014-04-06T11:24:34+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;This video is made by Jonas Ginter with 6 GoPro Cameras and I find it quite interesting.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/h1msuWVZZmQ?feature=oembed&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;And here’s how he made it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/1200px_360_degree_gopro_mount_3d_print_jonas_ginter.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://thenextweb.com/shareables/2014/04/05/360-video-shot-6-gopro-cameras-will-blow-mind/&quot;&gt;More details&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/gopro-360-degree-video/&quot;&gt;GoPro 360 Degree Video&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on April 06, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[一地鸡毛]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/ground_covered_with_chicken_feathers/" />
  <id>http://wurui.cc/blog/ground_covered_with_chicken_feathers</id>
  <published>2014-03-31T11:06:44+08:00</published>
  <updated>2014-03-31T11:06:44+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;啤酒虽然夺了过去，但小林脑袋已经发懵，这天夜里睡得很死。半夜做了一个梦，梦见自己睡觉，上边盖着一堆鸡毛，下边铺着许多人掉下的皮屑，柔软舒服，度年如日。又梦见黑鸦鸦无边无际的人群向前涌动，又变成一队队祈雨的蚂蚁。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;能帮忙先说不能帮忙，好办先说不好办，这才会成熟。不帮忙不好办最后帮忙办成了，人家才感激你。一开始就满口答应，如果中间出了岔子没办成，本来答应人家，最后没办成，反倒落人家埋怨。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;两人都是大学生，谁也不是没有事业心，大家都奋斗过，发愤过，挑灯夜读过，有过一番宏伟的理想，单位的处长局长，社会上的大大小小机关，都不在眼里，哪里会想到几年之后，他们也跟大家一样，很快淹没到黑压压的千篇一律千人一面的人群之中呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;你也无非是买豆腐、上班下班、吃饭睡觉洗衣服，对付保姆弄孩子，到了晚上你一页书也不想翻，什么宏图大志，什么事业理想，狗屁，那是年轻时候的事，大家都这么混，不也活了一辈子？有宏图大志怎么了？有事业理想怎么了？“古今将相在何方，荒冢一堆草没了！”一辈子下来谁不知道谁！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;找人办事，如同在单位混事，只能投靠一个主子，人家才死力给你办；找的人多了，大家都不会出力；何况你找多了，证明你认识的人多，显得你很高明，既然你高明能再找人，何必再找我？这时除了不帮忙不说，还容易产生抵触心理，说不定背后再给你帮点倒忙，看你不依靠我依靠别人这事能办成!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;《一地鸡毛》 ——刘震云&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/small_news_pic7190.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/ground_covered_with_chicken_feathers/&quot;&gt;一地鸡毛&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on March 31, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[《码农故事》]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/programmers-story/" />
  <id>http://wurui.cc/blog/programmers-story</id>
  <published>2014-03-29T11:06:44+08:00</published>
  <updated>2014-03-29T11:06:44+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;创业公司核心代码被盗，作案者到底是黑客还是内奸？社交网站遭遇DDoS攻击，究竟是何人所为？顶级大牛程序员改行送外卖的背后又有什么隐情？当精英创业团队面临理想与现实的冲突，他们各自做出了怎样的选择？前端女汉子和美女市场经理谁最终会得到钻石王老五的青睐？成功的曙光出现之时，又发生了什么匪夷所思的事情？当一切都尘埃落定之时，是技术改变了世界，还是资本扭曲了人性？————&lt;a href=&quot;http://coderlmn.github.io/coderStory/&quot;&gt;《码农故事》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般有程序员小说我都是要读读看的，一来帮助我这种行业菜鸡初窥一下行业规则，二来可以从一个程序员的眼睛重新看待一些人和事。总得来说，多半是有趣而丰富的。&lt;/p&gt;

&lt;p&gt;由于是在线更新连载，时间线比较长，前期的想法已经记不清了。我这里主要说说公司CEO赵川的人物性格演变。创业初期，赵川带着追随自己并一同离职的莫楠开发了一个健康社区，公司只有寥寥数人，当同事追问赵川为什么要从待遇丰厚、条件稳定的大公司离职时，赵川是这么回答的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我出来是因为讨厌给客户做开发。在咱们这儿多好，只有用户，没有客户。一切工作都是为了让用户满意，直截了当，也有成就感。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;刚刚摆脱大公司的束缚，单干起来，赵川只觉得神清气爽，上楼也不累了，干活也有劲了。而到了A轮融资的前期，经历了诸如对投资方行事路子野的不适应到麻木；公司发展目标的巨大压力，18个月用户翻10倍到12个月翻10倍；人员流动带来的核心代码流失；DDoS攻击竞争对手。公司CEO赵川，受到方方面面施加的巨大而持续性的压力。最后的结果就是人格、世界观，方法论都发生了巨大的变化甚至是扭曲。第九十四回，莫楠最后一次找赵川谈话。 赵川面无表情地答道：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;莫楠，人不能一辈子只活在理想里。咱们生活在一个讲现实的社会，没人真正会关心你的理想，除非你的理想可以转化为利益。再说，如果没有现实的利益给它送去口粮，理想也会饿死的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;莫楠又一次愣住了：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;老大，你真的变得让我觉得很陌生。以前我觉得你是一个理想主义者，我是受你的影响，成了半理想半现实。可现在呢，我快进化成真正的理想主义者了，你却突然变成了现实主义者！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所谓一将功成万骨枯，公司最终A轮融资成功，公司估值达12亿元，办公室也重新搬回了市中心的高级写字楼。然而人走茶凉，铁杆小弟和日益成熟的产品经理受不了公司气氛变化双双辞职。天使投资人套现身退，赶在东窗事发前跑路。跟公司相关联的高中同学开发区主任和顶头的副市长均被带着调查。坐在宽敞的独立办公室里，赵川呆呆的望着落地窗外鳞次栉比的商业楼。这十二个月，自己到底是收获了，还是失去了。&lt;/p&gt;

&lt;p&gt;作者微博：&lt;a href=&quot;http://weibo.com/ned11&quot;&gt;老码农的自留地&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/programmers-story/&quot;&gt;《码农故事》&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Wu Rui's Home&lt;/a&gt; on March 29, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>