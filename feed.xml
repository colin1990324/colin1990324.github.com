<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Rui Makes</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://wurui.cc/feed.xml" />
<link rel="alternate" type="text/html" href="http://wurui.cc" />
<updated>2017-12-28T15:17:06+08:00</updated>
<id>http://wurui.cc/</id>
<author>
  <name>Wu Rui</name>
  <uri>http://wurui.cc/</uri>
  <email>ruiwu1990324@gmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[车旋元年，木工房の诞生]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/woodshop-2017/" />
  <id>http://wurui.cc/life/woodshop-2017</id>
  <published>2017-12-28T11:38:16+08:00</published>
  <updated>2017-12-28T11:38:16+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;一切都源自上半年B站上看到的美国退休建筑师&lt;a href=&quot;https://www.youtube.com/user/urbanTrash/videos&quot;&gt;Frank Howarth&lt;/a&gt;做木工的视频。这位哈弗毕业的大叔退休后住在Portland, Oregon，并在自家院子里建了一个独立的木工房。大叔不仅木工做得好，制作视频的水平更是远超一般的木工YouTuber。磁性的声音，定格动画技巧，gopro的应用，竭尽我空闲的时间，很快把油管上几十个视频都刷了一遍，还每天盼着更新。Frank的作品主要是一些碗，原木纹，拼花纹，每年圣诞节也一定会做一个ornament，让孩子们一起挂到圣诞树上。其余时候也像其他老外一样，改造木工房，做一些实用性的木工，修修补补等等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/bowl.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是一激动，我入了一台车床！&lt;/p&gt;

&lt;p&gt;但是木旋是个深坑！车床只是基础投资，接下来还有卡盘，车刀；进阶的有快换卡盘，大平抓，舍弃式车刀，掏空刀，开孔钻头，开孔延长杆，砂盘。数波淘宝操作以后有了下图的配置。。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/lathetool.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;入了坑以后再也爬不出来。小木料划不来，大木料得买台带锯来开吧；做点柜子什么的得买台锯才锯的直吧；钻孔手电钻不能保证垂直，台钻来一台；木料截断得斜切锯吧；板材刨平没有压刨怎么行；这么多设备，不能木屑满天飞，集尘来一套。又是数波淘宝咸鱼操作，有了下面的木工房布局。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/woodshop-infinite.gif&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;只买设备没有作品的都是装备党！不能背上这个名声，展示一下今年的主要作品：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/4.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/5.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/6.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【巴花日轮盘】 2017月4月22日&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/9.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【巴花雷神之锤】 2017月6月10日&lt;/p&gt;

&lt;p&gt;巴西花梨是古夷苏木的俗称，不属于传统红木范畴，更不是真花梨。但是遇到好的纹理也甚是漂亮，如果有鬼脸大板做张餐桌更是梦寐以求。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/11.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/12.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【黑柿山水杯】 2017月7月2日&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/7.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/8.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【黑柿茶罐】 2017月10月15日&lt;/p&gt;

&lt;p&gt;黑柿木学名十二雄蕊破布木，色泽随著木纹幻化，纹路曲折变化多端，似不规则山水状纹，深沉、内敛。黑柿木是最近几年才引进的稀有木材，自然山水纹理惊艳了众人，早些时候也是一木难求。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/10.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【黄杨葫芦】 2017月4月30日&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/22.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/23.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【黄杨将军罐】 2017月12月2日&lt;/p&gt;

&lt;p&gt;黄杨木属于常绿小灌木，其材质坚硬细腻，生长极其缓慢，至少要三十年以上树龄者才能作雕刻材料，所以也被称之为“千年矮”。将军罐，是中国陶瓷艺术的珍品。—种罐式，因宝珠顶盖形似将军盔帽而得名。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/15.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/16.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/17.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/18.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【大红酸枝茶刀】 2017月10月28日&lt;/p&gt;

&lt;p&gt;大红酸枝交趾黄檀，这就是正经红木啦。茶刀主要是喝普洱茶时使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/20.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/21.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【老柏木缺口碗】 2017月5月6日&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/13.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/14.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【老柏木水瓶座】 2017月10月29日&lt;/p&gt;

&lt;p&gt;柏木是四川民居建房用的主料。这两件作品都是从一根几十年的拆房老料中诞生的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/1.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/2.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/3.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【风车木碗】 2017月11月25日&lt;/p&gt;

&lt;p&gt;风车木有时候也被称做黑檀，又硬又重。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/24.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/woodshop2017/25.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;【阴沉金丝楠小象】 2017月4月8日&lt;/p&gt;

&lt;p&gt;也就是金丝楠的乌木做的小象手机支架，不多的非木旋作品，阴沉木反而比较轻。&lt;/p&gt;

&lt;p&gt;以上，就是2017年大部分拿得出手的作品了。今年是咱木工房的元年，望来年手艺进步，空闲时间多一点吧，年末实在太忙了！&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/woodshop-2017/&quot;&gt;车旋元年，木工房の诞生&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on December 28, 2017.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[基于深度学习的二进制恶意样本检测]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/malware-detection-by-deep-learning/" />
  <id>http://wurui.cc/tech/malware-detection-by-deep-learning</id>
  <published>2017-11-22T11:17:20+08:00</published>
  <updated>2017-11-22T11:17:20+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;今年7月25日，我所在的公司瀚思科技在北京宣布完成B轮融资一亿元人民币，并且发布了新一代的病毒检测产品DeepSense。Deepsense可以做到沙箱同等水平的高检测率99%，而误报率低于1/1000。&lt;/p&gt;

&lt;p&gt;7月27日，在2017网络生态安全峰会（前阿里安全峰会）人工智能与安全分会场上。我代表瀚思科技第一次披露了Deepsense的技术细节。11月16日，在InfoQ AI前线组织的瀚思安全月第三讲中，我又给大家介绍了最新的一些进展。这次分享有16个群的朋友同步在线收看，下面是分享的图文实录。&lt;/p&gt;

&lt;p&gt;各位晚上好，首先感谢大家参与我的这次主题分享，同时也感谢 InfoQ AI 前线组织这次瀚思科技主题月！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/0.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;瀚思科技成立于2014年，按行业划分我们是一家安全公司。但和大家熟知的卖杀毒软件或者防火墙的传统安全公司不同。瀚思科技帮助各种中大型企业搭建安全大数据的分析平台，平台上应用的安全分析策略深度结合了多种机器学习算法，最终帮助企业定位与揭示各种安全问题。所以我们自己定位是一家安全+大数据+AI的公司。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/1.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在瀚思科技首席科学家万晓川的带领下，瀚思算法部门紧追时下AI领域最前沿的技术突破，并尝试应用在安全领域当中。今天是主题月的第三讲，接下来我会为大家分享我们是如何利用深度学习来做二进制恶意样本检测的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/2.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;agenda如上图所示，考虑我们主要的观众是大数据和AI方向的，我会首先介绍一下病毒检测的技术沿革，各种技术的优劣和取舍。然后我会说明为什么我们认为深度学习可以很好的应用于病毒检测。具体我们是怎么应用深度学习的，用的什么网络，中间有什么技巧。最后是实际操作后，我们得到的一些经验教训，以及下一步的发展规划。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/3.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如图所示，我们可以笼统的把病毒检测的各种技术根据两个不同的维度来进行区分。一是根据数据源可以分为基于内容和基于行为两种。二是根据检测方法分为：基于特征码、基于规则、基于算法。&lt;/p&gt;

&lt;p&gt;基于内容的就是一般所谓的静态分析，病毒样本不需要实际执行起来。安全人员直接打开文件查看二进制码或者反汇编后来分析源代码都算静态分析。熟悉安全领域的朋友会注意到这里有个加壳的问题，加壳的样本，尤其是复杂的壳，要做反汇编其实并不容易。内容结合特征码就是传统的病毒引擎的原理，我们日常在都在使用。依赖安全人员给出精准匹配的特征码，匹配迅速，但是就如我们的杀毒引擎一样，需要定期更新病毒库。&lt;/p&gt;

&lt;p&gt;基于行为的就是一般所谓的动态分析，需要在实际或者通过虚拟化的方法把病毒样本执行起来。通过考察样本对操作系统各种资源的操作来构建特征和分析。某些大病毒家族，比如勒索软件，因为操作高调，通过动态分析非常好识别。&lt;/p&gt;

&lt;p&gt;基于规则的方法在静态分析领域用得很少，算是补充。但是在沙箱领域非常常见，因为病毒行为很容易写出规则来。但实际的情况是病毒在沙箱内运行的时间短，最多就是30分钟，往往10分钟都不到，导致其行为暴露不够充分。&lt;/p&gt;

&lt;p&gt;运用分类算法基于行为特征来检测看似不错，但是行为特征少是一个明显的缺陷。所以很多时候往往是混合了动态的和静态的特征来构建。&lt;/p&gt;

&lt;p&gt;运用网络行为加算法来分析就是目前比较火也很有前途的NTA（Network Traffic Analytics）。NTA既融合了传统规则，也结合了机器学习，通过监测网络的流量、连接和对象来识别恶意样本产生的行为。再配合上质量好的威胁情报，能产生高信息熵的特征，特别适合Botnet这一类的病毒。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/4.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在历史沿革和普及度上，我们需要知道在业界中，基于特征码（也就是内容特征匹配）的技术仍然占有压倒性优势。统计发现，只要能拿到对应的病毒样本，各大杀毒引擎厂家都能在3小时左右部署特征码。但这个工业流程到达极限以后，厂商在后台拿到新样本的速度很难再提高（APT也难拿到样本），要么是拿到了也处理不过来（新病毒的产生速度一直在提高，有报告统计出每4.2秒就有一个新病毒产生）。一般我们普遍认为，在APT开始大量出现后，特征匹配的方法（流程）到了极限。&lt;/p&gt;

&lt;p&gt;如上图时间轴，考察Virustotal中集成的新引擎，可以看出各个厂商应用内容/行为+算法模式的推进速度。安全厂商普遍使用机器学习算法是从2000年开始的垃圾邮件检测，从最初的简单贝叶斯到04年的SVM。我们安全行业采用算法的速度并不落后于其他行业，衡量标准是安全厂商的数量。而学术界更早就有用算法解决安全问题的文章。前面提到09年后APT兴起，伴随着是沙箱类产品的兴起。2010年第一个GPU版的卷积神经网络出现，在图像识别领域飞速发展，网络变得越来越深，越来越大。到15年，基于深度学习的图像分类识别，其准确度已经超越了人眼。同年，微软开办了第一届恶意软件分类大赛（Microsoft Malware Classification Challenge）。虽然当年拿下第一名的队伍后来被爆出投机取巧了（后面还会讲到细节），但是MS的竞赛让很多厂商学到了实际的样本分类算法应该怎么去做。到16，17年的时候，Virustotal已经集成了诸如CrowdStrike、Invincea、Endgame之类的基于算法的检测引擎了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/5.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们再快速做个对比。基于行为的也好，基于内容的也好，方法本身并无明显的优劣，但是部署场景有着明显的区别。瀚思做的是2B端，所以如果做行为分析，只能依赖于把样本放入沙箱里跑，没法从已经感染了病毒的一个客户实际的电脑上收集到病毒实际的行为。同时现在反沙箱技术实在是过于普及，倚赖沙箱技术会导致病毒检测率的天花板很低。如果做内容分析，又容易被加壳技术干扰。对应非文件类型的样本，如寄存在内存中的木马等无法支持。考虑到瀚思没有终端检测的产品线，加上技术团队做沙箱出身了解其弱点，最终选择了内容+算法的路线。另外2B还有个优势是能看到样本的额外信息（安全设备日志），比如是从那个网站下载的，是哪封邮件的附件，这些可以帮助我们降低误报率。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/6.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二部分我们讲讲为什么深度学习适用于病毒样本分类的问题。&lt;/p&gt;

&lt;p&gt;首先是效果足够好，在图像识别、语音识别、机器翻译等领域的效果都远远超过非深度学习的算法。第二是样本的性质合适，深度学习就是擅长处理单一类型的数据。对应我们的输入都是二进制文件。第三要求足够多的样本，而样本越多准确的也越高。病毒的样本呢，根据Symantec在今年Q2的统计，单日样本可以达到300万。第四，可以避免人工去选择特征，只要一开始就设计好网络结构，深度学习会自动学习到重要的特征。再对比静态分析，比如用N-gram，特征数量会轻松突破百万，再乘以上面的样本数，机器学习是必然选择。&lt;/p&gt;

&lt;p&gt;总得来说，深度学习的优点（超多特征，无需人工特征，样本越多越好）都非常适合二进制病毒样本分类这个领域。目前我们也尝试应用深度学习到其他安全场景中（基于NLP的智能运维），但因为安全系统属于机器学习的下游，一般安全领域不容易直接产生对机器学习新思路突破，经常是借鉴上游的突破（如图像识别），所以还有很多安全领域等待我们去应用新的机器学习算法。&lt;/p&gt;

&lt;p&gt;唯一的缺点就是深度学习目前还相对黑盒，研发人员和客户都还不容易理解，相关人员也不好招聘。&lt;/p&gt;

&lt;p&gt;那么问题来了，我们的输入是文件，深度学习的输入是图像、语言、文字。中间如何转化？选取什么样的网络结构？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/7.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么是深度学习？2012年的ImageNet大赛中，Alex Krizhevsky凭借AlexNet一举把分类误差的记录从26%降到了15%，震惊了世界。而AlexNet的核心就是上图中的卷积神经网络。网络的输入是图像，输出是该图像对应的分类。顾名思义，卷积神经网络包含多个卷积池化单元，其中包括了应用卷积核的卷积层，进一步降维的池化层。做完特征检测后，接入全连接层，观察输出特征与哪一分类最为接近。最后通过一个分类器得到分类的结果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/8.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一般笼统的说法，越深的网络就代表更好的分类结果。但目前最新的一些网络模型都参考了resnet的理念，也就是很多个少数层的block组合而成，理念类似ensemble method，看block的构成和block的组合。
对于这个样本分类来说，我们前后换过几个resnet变种，目前部署的模型是基于inception-v4，但目前正在实验densenet，因为同等检测率下，参数更少计算更快。在客户环境下部署，我们希望尽量降低对硬件的需求。从我们实验的效果看，从早的resnet到新的inception-v4，迁移学习后差别只在5%内。所以今后我们研究的重点在速度了，网络选择是第二位。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/9.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之前我们提了一个问题，我们的输入是二进制样本，而卷积神经网络的输入是图像，怎么办？其实这个问题有两层含义，第一，我们需要把二进制样本通过一种方法转换为图像。第二，我们需要借助图像分类的经验甚至是特征模型来帮助我们做病毒的分类。&lt;/p&gt;

&lt;p&gt;那么具体讲解我们的工作流之前，我们先引入一个概念：迁移学习。&lt;/p&gt;

&lt;p&gt;在今年的CCAI上，香港科技大学教授杨强又跟大家分享了什么是深度学习的迁移学习，这里借用他一张ppt。现在我们有两个近似领域A和B，通过深度学习自动提取特征以后，我们发现两个领域在浅层网络中的低级特征其实是可以共享的，而在深层网络中因为领域不同而对应了不同的高级特征。一种普遍的情况是领域A有大量的标记数据，有优良的特征模型已经生成。而领域B数据量比较小。那么通过共享特征，我们可以应用迁移学习将适用于大数据的领域模型A借用过来，再通过领域B的标签数据去训练高级特征和分类，从而在领域B上实现更好的分类效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/10.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以我们的流程如图所示。将正负样本按1：1的比例转换为图像。将ImageNet中训练好的图像分类模型作为迁移学习的输入。在GPU集群中进行训练。我们同时训练了标准模型和压缩模型，对应不同的客户需求（有无GPU环境）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/11.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;流程中比较核心的算法其实在文件到图像的转换。因为常规的网络一般能输入的尺寸也就是300 x 300上下，也就是9K左右的规模。而病毒样本的大小平均接近1M，是远远大于这个尺寸。图像领域的常规转换方法就是缩放，或者用pyramid pooling。这两者我们实验效果都非常低差，AUC在0.6左右。所以后来我们又设计了一个很复杂的pooling算法处理大尺寸文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/12.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;前面我们介绍过，加壳的样本会对基于内容的分析造成影响。实验中我们发现文件A和B经过加壳后转图像。肉眼看过去，A和B的相识度会比以前更高。就好比PS中马赛克一张猫和一张狗的图片，马赛克强度越高，两图片处理后看起来越相似。但马赛克（加壳）强度低的话，其实处理后的图片和处理前的图片有一定的高纬度映射关系（加壳前后有对应关系）。这种关系，实验看起来深度学习网络能够分辨。当然强度大就无能为力了。
假设算法目前是分辨猫狗照片，不管有没有马赛克。但训练照片中，只有猫照片有马赛克处理，狗没有。所以人工产生狗马赛克图片（人工对样本加壳），让算法有更强分辨能力，至少是对弱马赛克后的图片。&lt;/p&gt;

&lt;p&gt;高强度马赛克的话，算法只能记住高强度马赛克后的特征，只是如果有额外信息，比如图片出现在的邮件正文有猫或者狗的字样，就能辅助我们判断（引入其他信息）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/13.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;流程中提过我们训练了双模型，一个的Inception-V4，一个是Squeezenet。Inception-V4是目前较为先进的模型，有最好的实验结果，训练和inference的速度也可以接受。而Squeezenet是压缩模型，参数数量只有AlexNet的1/50，虽然准确度稍差，但检测速度快很多，专为不能提供GPU环境的客户设计。另外针对这两个模型做迁移学习的时候，我们都替换掉了最顶和最低几层。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/14.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;简单说一下测试结果，AUC可以达到0.985，误报率小于1/1000，检测的速度目前可以达到150M/天。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/15.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再与各位分享一些经验教训。上面提到检测率和误报率已经同等于沙箱检测的水平。而基于二进制文件的深度学习无需沙箱环境（无需在客户处部署沙箱）。深度学习模型记住的是病毒二进制文件中的有效特征，而不是特征码（特征码由专家选取，对应唯一病毒样本），所以具有更好的通用性。在实际测试中，即使一个月不更新模型，对新衍生的病毒样本也有较高的识别能力。&lt;/p&gt;

&lt;p&gt;测试发现，对不同规模的样本进行测试。更大的数据集，有更高的准确度。这个深度学习本身的性质是一致的。再者不能完全把深度学习当成黑箱，而是需要分析其机制，至少要观察哪些样本的哪些特征比重较大。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/16.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;今年5月爆发的WannaCry席卷了全球90多个国家，造成了很恶劣的影响。上图贴出了Virustotal上各家病毒引擎对早期WannaCry样本的扫描结果。我们可以看到，只有CrowdStrike和Endgame两家使用机器学习为核心的病毒引擎能够将其识别为可疑。这也印证了我们所说的泛化能力强。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/17.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外有一个意外发现是，我们的模型对恶意的HTML检测率也很高。但同时对正常的HTML样本有很高的误报率。定位发现原因是训练集的恶意样本中包含很多HTML内容，被深度学习抽取成了特征。优化方法很简单，只需要在正常样本中加入一定的HTML就可以平衡。&lt;/p&gt;

&lt;p&gt;前面提到微软比赛中第一名的方案是有问题的。他的方案是用N-gram产生数万特征，然后用XGboost来做分类。赛后有人发现，微软提供病毒样本时是按病毒分类放在不同路径下，而路径字符是包含在样本中，并被分类器判断成了重要特征。这才使其分类准确度优于其他选手。&lt;/p&gt;

&lt;p&gt;上面两个案例都再次提醒我们，不能把机器学习黑箱化。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/18.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下一步，我们还会深入到网络中，继续探索具体的检测机制。我们还会测试其他的样本类型，比如文档类型。目前我们的输出只是一个二元判断，那安全人员可能希望可以进一步给出病毒类型，甚至是家族归属。方案层面，除了目前使用的二进制码转低纬度图片+CNN的方法，我们也在测试另一套方案，考察二进制码在长空间跨度下的特征，并应用LSTM。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/19.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;今天分享先到这，感谢大家！下周还会有我们瀚思高颜值的大数据架构师为大家分享基于Flink的超大规模实时流应用。想加入我们成都或者南京site做大数据／算法开发的，不要犹豫，直接邮件hr@hansight.com。对机器学习和用户行为分析感兴趣的也欢迎直接来勾搭我。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/malware-detection/20.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;问答环节&lt;/p&gt;

&lt;p&gt;Q1: 在文件加壳加密混肴的情况下，系统如何处理？
答：处理加壳样本的方法我在分享中P12已经直接讲到了。&lt;/p&gt;

&lt;p&gt;Q2: 现在病毒传播很多靠社会工程学，是用户的正常行为，而且病毒也越来越以获利为目的，不搞破坏，重视隐藏。如果病毒使用gfw对抗方的各种流使量无特征方式，检测系统如何应对呢？
答：现在某些病毒，在行为层面隐藏的比较好，基于行为的检测可能不适用了。那么我也讲到了，基于深度学习的这套检测技术，是基于二进制码的，是直接针对内容的。因为病毒的恶意行为总需要通过某些代码触发，我们即可以通过内容来抽取对应特征并识别。&lt;/p&gt;

&lt;p&gt;Q3: 基于深度学习的检测结果的可解释性很低。如果出现了误报，除了whitelist，有没有其他更好的办法？
答：首先我们的误报率是低于千分之一的。另外分享中我提到了，我们可以结合外部信息，比如威胁情报来产生高信息熵的结果。再者因为我们是做2B，对需要二次确认的样本还可以放在我们大数据平台下做前后事件的追溯。&lt;/p&gt;

&lt;p&gt;Q4: 可以详细说一下是如何将二进制文件转换为图像的吗？文件大小不一，是如何处理的？还有就是二进制文件有分段处理吗？
答：我们使用改造后的pooling算法，一次性转换，没有分段。&lt;/p&gt;

&lt;p&gt;Q5: 对于样本label，除了借助第三方如VT扫描结果，有没有其他更好的方法？
答：我们的样本label包括VT和安全部门自己产生的。&lt;/p&gt;

&lt;p&gt;Q6: 您PPT中提到了标准模型和压缩模型，可以详细解释下这两个模型的差异吗
答：简单回答，大的网络参数多，准确度高，但无论是train还是inference的速度都很慢。我们的企业客户很多又没有GPU可以提供。为了提速，我们可以通过剪枝或者选择小网络来训练，只保留几十分之一的参数，缺只损失5%左右的准确度。这也是最近深度学习的一个发展方向。&lt;/p&gt;

&lt;p&gt;Q7: PPT中有提到替换最顶和最低几层，这个又是什么意思呢？具体如何替换的呢？
答：输入层的替换主要是对接我们转换后的样本。输出层的替换主要是分类器我们用了lightGBM。&lt;/p&gt;

&lt;p&gt;Q8:请问您的方法中是不是只能检测已知的恶意文件，泛化能力这一块大体是个什么水平。
答：如上面介绍的，深度学习模型记住的是病毒二进制文件中的有效特征，而不是特征码，所以具有更好的通用性。即使一个月不更新模型，对新衍生的病毒样本也有较高的识别能力。&lt;/p&gt;

&lt;p&gt;Q9:我对这个结果还有点疑惑，理由如下：深度学习本质还是个f(x)，效果好的前提是训练和测试的分布有较强一致性，而迁移学习现在进展缓慢。我之前也做过一段时间安全，安全领域现实数据可以说五花八门，一般训练集几乎无法做到跟真实环境分布一致，基于分类的做法我当时感觉更多是学术价值，当然对于dga这种分布明显的是有效的。
答：我们本身就是基于真实环境中的病毒样本来做训练的。安全团队每月都会拿到千万的最新病毒样本，我们也会持续更新模型。这个最终是会应用到客户环境的，并不是一个纯研究性的课题。&lt;/p&gt;

&lt;p&gt;Q10:请问一下，训练好的模型，可以在移动终端上运行或自行改良吗？也就是不断应对持续升级的病毒样本。
答：我们还没有测试过在移动端上运行。但是模型是会动态更新的。&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/malware-detection-by-deep-learning/&quot;&gt;基于深度学习的二进制恶意样本检测&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on November 22, 2017.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Lego Technic GMK 6400 Mobile Crane]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/gmk-6400-mobile-crane/" />
  <id>http://wurui.cc/life/gmk-6400-mobile-crane</id>
  <published>2016-12-03T15:30:16+08:00</published>
  <updated>2016-12-03T15:30:16+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;GMK6400是社区玩家合力升级自乐高科技系列42009大吊车而成，可谓是科技男孩儿的梦想之作，是一定程度上的巅峰。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/cg_crane.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;动力和传动系统&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/pf_system.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;边做边改的一些小细节&lt;/p&gt;

&lt;p&gt;原版乐高推杆，简单修改一下，水平大概5度，垂直80度。两边基本接近极限了，没有用三方推杆的情况下基本满意。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.lelezhen.com/data/attachment/forum/201611/30/131749b7kyx19ffyfyx1xw.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.lelezhen.com/data/attachment/forum/201611/30/131750nkmvvivzbkham9oo.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;伸缩臂的第三级在收回的时候容易被第二级的内部卡住。在末端加滑轮以后基本解决了这个问题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.lelezhen.com/data/attachment/forum/201611/30/131901gp9ij99zd7ikzajw.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;推杆细节&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.lelezhen.com/data/attachment/forum/201611/30/131857e4enzlagdidln3jy.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因为我有2012-2015年的旗舰，全部杀肉以后分几次补了300rmb左右的散件。&lt;/p&gt;

&lt;p&gt;项目演示+做视频玩儿~&lt;/p&gt;

&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;
  &lt;iframe class=&quot;embed-responsive-item&quot; width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://player.youku.com/embed/XMTg0NzYxODA2OA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This MOC is a community project and credits should go to Gerger, Blakbird, AFOL1969, (and others) for the design and the detailed instructions. &lt;a href=&quot;http://www.eurobricks.com/forum/index.php?showtopic=99748&quot;&gt;Refer to the eurobricks thread for this MOC here&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/gmk-6400-mobile-crane/&quot;&gt;Lego Technic GMK 6400 Mobile Crane&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on December 03, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Lego Technic 42042RC]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/lego-technic-42042rc/" />
  <id>http://wurui.cc/life/lego-technic-42042rc</id>
  <published>2016-10-24T11:18:22+08:00</published>
  <updated>2016-10-24T11:18:22+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Extreme9398之后又复刻了荒川的Buggy3，42037到手后尝试着自己改了遥控，因为都是车所以没有做视频。这次带来的是大型工程机械42042R履带吊车。&lt;/p&gt;

&lt;p&gt;42042需要大量的13单位和15单位梁，拆了42043和42030后勉强够用。红外接收器需要3个，我只有两个，但是有一个sbrick。思路是sbrick驱动履带、驾驶舱和大转盘等底盘部分，一个红外负责吊臂提升和大绞盘。复刻完成后的样子。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/42042.1.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/42042.2.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;爪子还需要自己改成电动。一种方案是L电机驱动mini推杆，然后用50cm延长线接到电池盒。但是我没有50cm延长线，所以直接把小电池盒放在了吊臂上，用第二个红外控制，想必降低了不少载荷。&lt;/p&gt;

&lt;p&gt;一共用了3个L电机+4个M电机实现全RC改造，可以做7个动作：左右履带，转盘360度转动，可抬高驾驶室，吊臂提升，绞轮提升爪子，爪子开合。&lt;/p&gt;

&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;
  &lt;iframe class=&quot;embed-responsive-item&quot; width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://player.youku.com/embed/XMTc3MjIyMjgwMA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;第二个imovie作品，又学到了一些功能~~&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/lego-technic-42042rc/&quot;&gt;Lego Technic 42042RC&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on October 24, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[春夜喜雨]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/spring-rain/" />
  <id>http://wurui.cc/blog/spring-rain</id>
  <published>2016-02-21T20:30:46+08:00</published>
  <updated>2016-02-21T20:30:46+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/spring_rain.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;猴年的第一场春雨来的有力而急促。正月未过十五，春天已然来了有些时候似的，诧是奇怪的天气。&lt;/p&gt;

&lt;p&gt;而新雨令我喜悦。正是新的一年，振奋的新的一年工作的开始。家里即将添个金猴儿，代步工具托夫人的福得以升级。无不是乐事！&lt;/p&gt;

&lt;p&gt;回忆起一些喜雨的诗句，都是大家熟知的句子，这里再拿出来读一读，也是舒服。&lt;/p&gt;

&lt;h6 id=&quot;section&quot;&gt;春晓 孟浩然&lt;/h6&gt;
&lt;p&gt;春眠不觉晓，&lt;/p&gt;

&lt;p&gt;处处闻啼鸟。&lt;/p&gt;

&lt;p&gt;夜来风雨声，&lt;/p&gt;

&lt;p&gt;花落知多少。&lt;/p&gt;

&lt;h6 id=&quot;section-1&quot;&gt;绝句 志南&lt;/h6&gt;
&lt;p&gt;古木阴中系短篷，&lt;/p&gt;

&lt;p&gt;杖藜扶我过桥东。&lt;/p&gt;

&lt;p&gt;沾衣欲湿杏花雨，&lt;/p&gt;

&lt;p&gt;吹面不寒杨柳风。&lt;/p&gt;

&lt;h6 id=&quot;section-2&quot;&gt;春夜喜雨 杜甫&lt;/h6&gt;
&lt;p&gt;好雨知时节，&lt;/p&gt;

&lt;p&gt;当春乃发生。&lt;/p&gt;

&lt;p&gt;随风潜入夜，&lt;/p&gt;

&lt;p&gt;润物细无声。&lt;/p&gt;

&lt;p&gt;野径云俱黑，&lt;/p&gt;

&lt;p&gt;江船火独明。&lt;/p&gt;

&lt;p&gt;晓看红湿处，&lt;/p&gt;

&lt;p&gt;花重锦官城。&lt;/p&gt;

&lt;h6 id=&quot;section-3&quot;&gt;早春呈水部张十八员外 韩愈&lt;/h6&gt;
&lt;p&gt;天街小雨润如酥，&lt;/p&gt;

&lt;p&gt;草色遥看近却无。&lt;/p&gt;

&lt;p&gt;最是一年春好处，&lt;/p&gt;

&lt;p&gt;绝胜烟柳满皇都。&lt;/p&gt;

&lt;p&gt;这里志南的绝句和杜甫的‘春夜喜雨’皆是描写成都春雨的诗句。成都春秋多是夜里开始下雨，清晨便停了。记得中学时候周末回家，若是夜里开始下雨，我总会坐在窗台上，静静的听雨滴落在树叶，水面的声音，什么都不想，享受这片刻的放松与舒适。&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/spring-rain/&quot;&gt;春夜喜雨&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on February 21, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[神经网络风格画 Neural Style Art]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/neural-style/" />
  <id>http://wurui.cc/tech/neural-style</id>
  <published>2015-12-03T11:17:20+08:00</published>
  <updated>2015-12-03T11:17:20+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;a href=&quot;http://arxiv.org/abs/1508.06576&quot;&gt;A Neural Algorithm of Artistic Style&lt;/a&gt;这篇论文说明了如何使用神经网络学习一副画的绘画风格，并把这种风格带入自选照片。&lt;/p&gt;

&lt;p&gt;比如下面这个例子，我们选择文森特·梵高的The Starry Night作为模板。学习过程让梵高灵魂附体我们的电脑，借脑还魂给我们作画。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neural_style_1.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;是不是很想试试呢？下面简单说说我在Linux上的运行经验。&lt;/p&gt;

&lt;h3 id=&quot;torch&quot;&gt;安装Torch&lt;/h3&gt;

&lt;p&gt;在terminal中运行以下命令&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash 
git clone https://github.com/torch/distro.git ~/torch --recursive 
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/torch&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ./install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第一个命令安装了LuaJIT和Torch需要的依赖。
第二个命令安装了LuaJIT, LuaRocks,然后用LuaRocks安装了torch, nn，paths等.&lt;/p&gt;

&lt;p&gt;脚本也添加了torch PATH到环境中，所以需要重启终端或者运行&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;有可能需要更新image包到最新&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;luarocks install image&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;loadcaffe&quot;&gt;安装loadcaffe&lt;/h3&gt;

&lt;p&gt;caffe的依赖比较简单，只需要安装protobuf&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install libprotobuf-dev protobuf-compiler&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后安装loadcaffe&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;luarocks install loadcaffe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;neural-style&quot;&gt;下载Neural Style的实现&lt;/h3&gt;

&lt;p&gt;先移动到你想存放项目的目录下。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Git clone https://github.com/jcjohnson/neural-style.git
sh models/download_models.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Git拷贝实现代码。&lt;/p&gt;

&lt;p&gt;第二行下载训练好的神经网络模型VGG-19和它的改进型，VGG-19为默认设置。&lt;/p&gt;

&lt;p&gt;默认设置运行使用&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;th neural_style.lua -style_image &amp;lt;image.jpg&amp;gt; -content_image &amp;lt;image.jpg&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果是公司电脑没有显卡，加上 -gpu -1&lt;/p&gt;

&lt;h3 id=&quot;run-run-run&quot;&gt;Run run run&lt;/h3&gt;

&lt;p&gt;下面是大师为我画的一些作品~~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neural_style_2.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neural_style_3.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neural_style_4.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neural_style_5.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/neural-style/&quot;&gt;神经网络风格画 Neural Style Art&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on December 03, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[紫光檀手镯]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/wood-bracelet/" />
  <id>http://wurui.cc/life/wood-bracelet</id>
  <published>2015-11-15T12:14:35+08:00</published>
  <updated>2015-11-15T12:14:35+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_5.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;初试木工手工艺，第一个作品，感觉还不错哟，又入一新坑。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_1.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;初买来的时候是开好料的木环。对没有电动工具的对新手来说很方便。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_2.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用锉刀修出手镯的形状。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_3.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;锉刀大概修成这样就可以了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_4.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用砂纸磨磨磨，从180目开始，240，400，800，1000，到2000目。180目的时候要消除锉刀造成的刀痕，而之后每次递进都是消除之前更粗的砂纸的划痕。这个时候还第一次试着上了蜂蜡，图里可见不是很亮。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/wood_work_6.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一周以后电磨到位，用德克士送的硬塑料水瓶中切做了一个夹具，把手镯套上。从低目到高目又重新打磨抛光了一次。网上查到紫光檀不需要上蜡，只要时不时用细布把玩就可以了。1个月左右产生漂亮的包浆。&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/wood-bracelet/&quot;&gt;紫光檀手镯&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on November 15, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[橡皮章DIY]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/eraser-print/" />
  <id>http://wurui.cc/life/eraser-print</id>
  <published>2015-11-03T21:40:32+08:00</published>
  <updated>2015-11-03T21:40:32+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;橡皮章，简单的手工。&lt;/p&gt;

&lt;p&gt;玩了一个月，感觉第一阶段已经过去了。记录一下历程，展示一下拙作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/eraser_1.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;“平安” &lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;第一个章居然选了刻字，真是有点自不量力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/eraser_2.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;接着二号三号选了花型，练习曲线。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/eraser_3.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;“年年有余”&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;传统图案。印的不是很好，但是红黑配很有味道。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/eraser_4.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;“吴睿私印” “机密” “皮卡丘”&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;私印设计哪家强？元代大书法家同名好。。。另外字母刻的不好。。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/eraser_5.JPG&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;乱乱的大集合~~&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/eraser-print/&quot;&gt;橡皮章DIY&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on November 03, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[小游戏1024自动机与AI]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/1024-autoplayer/" />
  <id>http://wurui.cc/tech/1024-autoplayer</id>
  <published>2015-10-18T14:59:10+08:00</published>
  <updated>2015-10-18T14:59:10+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;之前看到&lt;a href=&quot;http://c4fun.cn/&quot;&gt;Coding 4 Fun&lt;/a&gt;的博客，使用&lt;a href=&quot;http://c4fun.cn/blog/2013/11/22/auto-aixiaochu-app/&quot;&gt;Qt+BlueStack实现自动天天爱消除&lt;/a&gt;。哇塞，好牛逼！写程序来开挂，这么高科技的玩法勾的我跃跃欲试了。&lt;/p&gt;

&lt;p&gt;考察一下技术方案，原文提到的Qt+BlueStack我都没有接触过，还是首选Python来的比较快。游戏选择另外一款曾经火热过的小游戏&lt;a href=&quot;http://1024game.org/&quot;&gt;1024&lt;/a&gt;。其实早在1024还火的时期，就有人做出了直接写在JS中的AI来自动玩游戏并获得高分。但是这里我希望也是做成基于图形识别的自动机框架。这样以后遇到别的游戏，图形识别和控制指令部分也能借用相同的代码。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;第一步 图形抓取&lt;/h3&gt;
&lt;p&gt;搜索一番发现可以使用Pillow的ImageGrab。但是Windows使用正常，mac却需要使用一个修改过的版本，&lt;a href=&quot;https://github.com/colin1990324/1024-AI/blob/master/ImageGrab.py&quot;&gt;下载&lt;/a&gt;以后直接导入。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ImageGrab&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# initial graphic settings&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BOX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;545&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1055&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1545&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WIDTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;214&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# position checking&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;im_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ImageGrab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BOX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;im_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# get origin_x, origin_y&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;origin_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getOrigin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;im_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;origin =&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin_y&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/1024-board1.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在屏幕上合适的位置取一个区域BOX，作为每次取屏的区域。这里不用特别准确，保证游戏区都在其中就可以了。getOrigin方法取得游戏区的准确位置，帮助校准，后面定位每个块的位置就方便了。我提前测量了游戏区域的尺寸数据，得知每个块的边长大概是214px，块间距是28px。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;第二步 数字识别&lt;/h3&gt;
&lt;p&gt;获得图形以后怎么识别里面的数字呢。简单想想，事先把1，2，4等的对应图形都存起来。识别的时候只需要一一比对就可以了。&lt;/p&gt;

&lt;p&gt;但是实力不济，1024以后的图形就没法获得了。。。再观察发现貌似新出的块只可能是1，2，4。如果自己维护一个棋盘，每一步之后的状态自己计算，那就只需要识别随机出现的新块在哪个位置，数字是1还是2还是4就可以了。&lt;/p&gt;

&lt;p&gt;但是眼残，貌似之前测量的有误差，实验的时候发现取的块不能完全重合，也就是不能用像素值全等来判断异同。。。估计有一两个像素的误差，想来也是人之常情。。。特别是图形特别复杂的时候，难以获得准备定位。第一考虑是用图形匹配算法，比如OpenCV的cv2.matchTemplate()。但是之前没有用过，不知道开销如何，我这里的问题实质又非常简单，无非是偏移了一点点位置。后来做了个实验，简单的把2D图形拉成1D链表，然后两个链表做PearsonCorrelation。结果效果非常好，阳性值都是0.99，阴性值0.3的样子。再后来为了提高速度，只取块中间50*50的区域，识别这几个简单图形仍然又快又好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/1024-board2.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;第三步 模拟游戏&lt;/h3&gt;

&lt;p&gt;既然是自动机，我们需要自己维护一个游戏模型。棋盘用一个4*4的矩阵就可以表达。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# initial board&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;im_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;游戏允许做上下左右四种操作，所有的块都会按照方向移动到底，相同数字的块合并。编码的时候我只实现了moveLeft，而其他三种操控可以通过矩阵旋转和moveLeft来间接实现。比如moveUp,我们只需要逆时针旋转90度，做moveLeft，再旋转270即可。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fliplr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;moveLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fliplr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rot90&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;moveLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rot90&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rot90&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;moveLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rot90&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;玩家完成一次操作之后会随机在空位生成一个新块，这时候我们在棋盘对应为0的所有位置进行识别，找到新块，并赋值在我们的矩阵中。&lt;/p&gt;

&lt;p&gt;Gamve Over的判定：&lt;/p&gt;

&lt;p&gt;获取新块之后，如果棋盘中没有0，则可以进行胜负判定。如果所有块的四个相邻块都不能与其合并，则判定游戏结束。&lt;/p&gt;

&lt;h3 id=&quot;ai&quot;&gt;第四步 AI算法&lt;/h3&gt;

&lt;p&gt;有了一套游戏机制以后可以考虑如何做AI来获取高分了。对抗游戏常用的MiniMax Algorithm这里并不适用。那就先试试普通的DFS。每一步都让程序去试试，每一步的每下一步也让程序去试试。如果试5步，就是对5步以后的4的5次方1024种不同结果进行了评估。评估就是给结果打打分，一般叫score function，优化问题中叫heuristic funciton。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastBoard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里有几个简单的考虑，一是空块越多越好（鼓励优先合并），二是最大块越大越好（毕竟想突破1024，2048嘛），三是相邻块的差越小越好（这样以后相邻块有更大合并的可能）。最后算出来的得分越高，就越是我们希望得到的结果。&lt;/p&gt;

&lt;p&gt;但是游戏中还有一大变数，使得这个理想算法不一定那么管用。每一步以后，会随机产生一个新块。而这个变量大大增加了计算的复杂度。尤其在游戏初期，每一步以后就不只是4种可能，而是数十种可能，如果要基于概率来算分，DFS这样的就不用考虑了。。。最后实际中，为了方便快捷（懒），我选择了只考虑一步。。。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/1024-AI/blob/master/1024AI.ipynb&quot;&gt;在notebook的最后&lt;/a&gt;，我给出了virtual game的运行代码。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;第五步 与游戏交互&lt;/h3&gt;

&lt;p&gt;AI帮忙算出了每一步走哪个方向好，我们要把这个决定用指令发送给游戏。&lt;/p&gt;

&lt;p&gt;Windows下用ctypes.windll.user32.SendInput很简单，mac上又麻烦了一些。首先搜到的居然是让我用PyObjC调用ObjC来生成按键事件。。。太绕了，打死不从，我们按键的频率又不高。后来找到了用Apple Script的方法，简单直观了不少。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pressKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;osascript -e &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tell application &amp;quot;System Events&amp;quot; to key code 123&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;osascript -e &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tell application &amp;quot;System Events&amp;quot; to key code 124&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;osascript -e &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tell application &amp;quot;System Events&amp;quot; to key code 126&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;down&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;osascript -e &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tell application &amp;quot;System Events&amp;quot; to key code 125&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;down&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;第六步 测试&lt;/h3&gt;

&lt;p&gt;终于完成了整个流程，摆好浏览器的位置，$python 1024.py，我们来跑一跑。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/1024.gif&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;流泪！！！毕竟亲生的，有点bug也懒得搞了。。。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/1024-AI&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/1024-autoplayer/&quot;&gt;小游戏1024自动机与AI&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on October 18, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[分离无连接子图]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/isolate-disconnected-subgraph/" />
  <id>http://wurui.cc/tech/isolate-disconnected-subgraph</id>
  <published>2015-09-29T17:34:31+08:00</published>
  <updated>2015-09-29T17:34:31+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;实践中经常遇到这样一个小问题。有一套图数据，所有节点间并不是全部连通的（任意点间均有通路）。这必然导致出现相互隔离的子图，这时我们可能希望将所有分离的子图找出来，单独处理。这里给出解决这个问题的一小段程序。&lt;/p&gt;

&lt;p&gt;The problem is, given a set of edges(node, node), seperate all subgraphs that are isolated from each other. Isolation of two graphs Gx and Gy is defined as every node Xi in Gx has no edge(or path) to every node Yi in Gy.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;# expect output 2 subgraph of {1,2,3,4} and {5,6,7}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;naive idea, construct a set of nodes of a subgraph, a new node is added to the set if it can connect to any node in the set&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSubgraphs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSubgraphs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;# this edge should connect two subgraph&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSubgraphs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Not as expected, something must be wrong!&lt;/p&gt;

&lt;p&gt;Later added edges may connect preview added sets together, check every pair of sets to see if they have any intersection&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;itertools&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;combineSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itertools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;iterate to combine sets till length of list don’t change&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;combineSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstList&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are familiar with Leetcode, you may feel like it is a real world practice of &lt;a href=&quot;https://leetcode.com/problems/merge-intervals/&quot;&gt;Merge Intervals&lt;/a&gt;.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/isolate-disconnected-subgraph/&quot;&gt;分离无连接子图&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on September 29, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[图数据库系列(一) 初见Neo4j]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/neo4j-first-sight/" />
  <id>http://wurui.cc/tech/neo4j-first-sight</id>
  <published>2015-09-04T11:08:32+08:00</published>
  <updated>2015-09-04T11:08:32+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;neo4j&quot;&gt;Neo4j简介&lt;/h2&gt;

&lt;p&gt;Neo4j是一个高性能的图数据库，属于NOSQL数据库中的一类。数据以图的形式存储而不是传统的表结构存储。Neo4j也可以被看作是一个高性能的图引擎，该引擎具有成熟数据库的所有特性，以及单机存储10亿级数据的能力。程序员工作在一个面向对象的、灵活的网络结构下而不是严格、静态的表中.&lt;/p&gt;

&lt;p&gt;Neo4j因其嵌入式、高性能、轻量级等优势，越来越受到关注。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;图形数据结构&lt;/h2&gt;

&lt;p&gt;在一个图中包含两种基本的数据类型：Nodes（节点） 和 Relationships（关系）。Nodes 和 Relationships 包含key/value形式的属性。Nodes通过Relationships所定义的关系相连起来，形成关系型网络结构。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j_graph.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;Neo4j可以被安装成一个独立运行的服务端程序，客户端程序通过RESTful API进行访问，也可以通过浏览器Console运行Cypher语句。另外Neo4j支持嵌入式安装，即安装为编程语言的第三方类库，目前只支持java和python语言。同时Neo4j也可以同Gephi结合，成为其插件式数据库源。&lt;/p&gt;

&lt;p&gt;因Neo4j是用java语言开发的，所以确保将要安装的机器上已安装了jre或者jdk。&lt;/p&gt;

&lt;p&gt;具体教程参见&lt;a href=&quot;http://www.cnblogs.com/ljhero/archive/2012/05/13/2498039.html&quot;&gt;LjHero&lt;/a&gt;的这篇博文，本文不再累述。&lt;/p&gt;

&lt;h2 id=&quot;cypher&quot;&gt;Cypher简介&lt;/h2&gt;

&lt;p&gt;Cypher是一个描述性的图形查询语言，允许不必编写图形结构的遍历代码对图形存储有表现力和效率的查询。Cyper通过一系列不同的方法和建立于确定的实践为表达查询而激发的。许多关键字如like和order by是受SQL的启发。模式匹配的表达式来自于SPARQL。正则表达式匹配实现实用Scala。Cypher是一个申明式的语言。对比命令式语言如Java和脚本语言如Gremlin和JRuby，它的焦点在于从图中如何找回（what to retrieve），而不是怎么去做。这使得在不对用户公布的实现细节里关心的是怎么优化查询。&lt;/p&gt;

&lt;p&gt;这个查询语言包含以下几个明显的部分：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MATCH：图形的匹配模式，束缚于开始点。&lt;/li&gt;
  &lt;li&gt;WHERE：过滤条件。&lt;/li&gt;
  &lt;li&gt;RETURN：返回所需要的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;实战演示&lt;/h2&gt;

&lt;p&gt;本场实战，我选取了一个邮件头（Email Header）数据集。希望通过构造图数据库，能将邮件的流向关系清晰的展示出来。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;数据预处理&lt;/h3&gt;

&lt;p&gt;原始数据&lt;a href=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/email%20headers.csv&quot;&gt;email_headers.csv&lt;/a&gt;包含了1170封邮件的数据头部分。数据有四列：From, To, Date, Subject。即发件人，收件人（复数），时间，主题。&lt;/p&gt;

&lt;p&gt;经过数据预处理，我将源数据分解为了三个文件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/addresses.csv&quot;&gt;addresses.csv&lt;/a&gt;:  所有不同的邮件地址，同时加上id。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/emails.csv&quot;&gt;emails.csv&lt;/a&gt;:所有不同的邮件，以及发送时间和主题。加上id。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/relations.csv&quot;&gt;relations.csv&lt;/a&gt;:所有的发送，接受邮件关系。包含Email_id，From_id，To_id。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过预处理，源数据清晰的分解为了图数据的两个组成部分：节点（邮件地址、邮件），关系（发送、接收关系）。&lt;/p&gt;

&lt;p&gt;接下来我们启动Neo4j server，打开浏览器Console（默认端口7474），开始使用Cypher加载数据。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;清除所有节点和关系&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;OPTIONAL&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;person&quot;&gt;加载邮件地址，生成Person节点&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;LOAD CSV是Cypher支持的从CSV文件载入数据的方式。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;c1&quot;&gt;LOAD CSV WITH HEADERS FROM &amp;quot;file:///home/colin/Downloads/data/addresses.csv&amp;quot; AS csvLine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Return 55 nodes.&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;加载邮件节点。&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;c1&quot;&gt;LOAD CSV WITH HEADERS FROM &amp;quot;file:///home/colin/Downloads/data/emails.csv&amp;quot; AS csvLine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Return 1170 nodes.&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;创建索引&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;加载关系时需要大量匹配节点。创建节点索引，提升效率。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INDEX&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INDEX&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-7&quot;&gt;加载发送、接收关系&lt;/h3&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用LOAD CSV命令加载大量数据时，可能因为内存限制而失败，产生OutOfMemoryError。这时使用USING PERIODIC COMMIT来分段加载数据。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;加载关系时，通过MATCH找到对应id的节点，然后创建关系：（节点）-[关系]-（节点）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每封邮件只有一个发件人，用CREATE UNIQUE创建唯一的关系。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;n&quot;&gt;USING&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PERIODIC&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;LOAD CSV WITH HEADERS FROM &amp;quot;file:///home/colin/Downloads/data/relations.csv&amp;quot; AS csvLine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}),(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emailId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}),(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csvLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNIQUE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Created 10233 relationships, statement executed in 4567 ms.&lt;/p&gt;

&lt;p&gt;加载完成，让我们来试验一下查询语句。&lt;/p&gt;

&lt;h3 id=&quot;id1id2&quot;&gt;查询所有：发件人id=1，收件人id=2的邮件&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j1.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Displaying 35 nodes, 98 relationships.&lt;/p&gt;

&lt;p&gt;这里返回了对应节点和关系。我们发现有的邮件收件人也包含了发件人，这个关系并不是很有意义。&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;查找所有收件人包含发件人的情况，删除这个环形关系。&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j2.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Displaying 35 nodes, 66 relationships.&lt;/p&gt;

&lt;p&gt;Cypher也支持对属性进行模糊查询。&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;通过时间戳来筛选邮件&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;注意，Neo4j没有内部支持的时间类型，这里我们需要使用正则表达式。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;~&amp;#39;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j3.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Displaying 7 nodes, 10 relationships.&lt;/p&gt;

&lt;p&gt;使用图数据库，我们可以轻易的解决较为复杂的路径问题。&lt;/p&gt;

&lt;h3 id=&quot;ab&quot;&gt;查询所有从A地址到B地址的路径&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=(:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j4.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过COUNT可以做聚合操作。&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;查询收件人最多的邮件（出度最高）&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cypher&quot; data-lang=&quot;cypher&quot;&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReceiverNumber&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/neo4j5.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;结果显示这些邮件都是发送给所有人的邮件。&lt;/p&gt;

&lt;h3 id=&quot;section-11&quot;&gt;小结&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;通过本次实战，我们实践了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用LOAD CSV加载CSV格式数据&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用USING PERIODIC COMMIT分段加载&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MATCH来进行匹配查询&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CREATE来创建节点和关系&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CREATE INDEX ON来创建索引&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RETURN返回语句&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DELETE删除语句&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用正则表达式~匹配属性&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查询路径&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;COUNT聚合操作&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过此文，希望你以及对Neo4j有了一个感性的认识，对Cypher语句有了初步的理解。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/colin1990324/Neo4j_EmailHeader&quot;&gt;Github项目地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vacommunity.org/VAST+Challenge+2014&quot;&gt;数据源 VAST2014 Challenge&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/neo4j-first-sight/&quot;&gt;图数据库系列(一) 初见Neo4j&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on September 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[时间序列异常检测]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/time-series-anomaly-detection/" />
  <id>http://wurui.cc/tech/time-series-anomaly-detection</id>
  <published>2015-07-30T16:26:32+08:00</published>
  <updated>2015-07-30T16:26:32+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;本文总结了我在时间序列异常算法方面的一些经验。读者需要对常规机械学习算法有一定的了解。希望本文能帮助有相关需求的工程师快速切入。&lt;/p&gt;

&lt;h2 id=&quot;egads-java-library&quot;&gt;EGADS Java Library&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yahoo/egads&quot;&gt;EGADS (Extendible Generic Anomaly Detection System)&lt;/a&gt;是Yahoo一个开源的大规模时间序列异常检测项目。它的框架主要由两个模块构成，一个是时间序列构造模块，另一个是异常检测模块。给定一段时间的离散值（构成一个序列），时间序列模块会学习这段序列的特征，并试图重新构建一个和原序列尽量接近的序列。结果和原序列一同送入异常检测模块，基于不同的算法（原则，阈值），异常点会被标记出来。&lt;/p&gt;

&lt;h3 id=&quot;time-series-modeling-module&quot;&gt;Time-series Modeling Module&lt;/h3&gt;
&lt;p&gt;时间序列构造模块提供了多种算法。简单介绍如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Olympic Model（Seasonal Naive）一个简单的窗口模型，对点Px的预测为点Px前n个值的Smoothed Average.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Exponential Smoothing Model 一个平滑模型，由简单的数列获得。ETS模型可以自动选择Single、Double、Triple里面匹配最好的输出。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Moving Average Model 也是平滑模型，点Px的预测值取邻近点的平均值。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Regression Models 一般是线性回归，特殊例子或者异常偏差特别大的时候有用。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;anomaly-detection-module&quot;&gt;Anomaly Detection Module&lt;/h3&gt;
&lt;p&gt;异常检测模块&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ExtremeLowDensityModel 超低密度模型，很简单有效的密度模型。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AdaptiveKernelDensityChangePointDetector 拐点检测模型&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;KSigmaModel 经典K-sigma模型&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DBScanModel（Density-Based Spatial Clustering of Applications with Noise）又是一个基于密度的模型，在空间中作聚类，如果目标序列可以比较好的分类的话会有不错的效果。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;实践经验&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;序列构造自动选优&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不同类型的数据可能适合不同的模型。选择AutoForecastModel，程序会自动把所有TMM都跑一遍，并推选偏差值最小的模型送入异常检测模块。值得注意的是，这里自动选取的标准只关注了还原度，但还原度高并不直接代表能更好的查找异常，在使用本方法的时候要留意在心。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;多数投票算法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不同的异常检测算法从不同的角度定义了异常。实践过程中我发现，单一异常算法并不能找出所有异常点，同时还会出现一系列的假阳性异常。使用Majority Voting，规定半数以上算法识别为异常的点才输出为结果，在实际数据中提供了远高于单一算法的准确度。&lt;/p&gt;

&lt;h2 id=&quot;surus&quot;&gt;Surus&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Netflix/Surus&quot;&gt;Surus&lt;/a&gt;是Netflix开源的一个项目，因为Netflix内部大量使用Pig和Hive，Surus主要的功能是提供RPCA的Pig/Hive封装。核心算法Robust PCA是Java实现的，可以单独调用。&lt;/p&gt;

&lt;p&gt;Netflix首先对他们的问题定了一个基调。Profile是一个非常好的习惯，对决策者来说可以提供命中率，也就提高了团队效率。问题的特征定义如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;高纬度。数据集纬度高，数据间相互交织，人工检测基本不可能。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最低加阳性。作为异常检测问题，我们不希望有过多的假阳性报警来干扰监控人员。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;周期性。每小时/每天/每周/每月这样的周期性数据如果不妥善处理，某些周期性的行为可能误报为异常。实际数据中，每天固定时段的峰值数据相对于大部分采样点都可能被判定为异常，但实际为周期性正常现象。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据并不是均匀分布的。像Netflix在两年中实现了高增长，算法需要足够健壮来处理非均匀分布的数据集(增长性数据是一个普遍现象，如长期来看的股市指数等)。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;算法细节&lt;/h3&gt;

&lt;p&gt;Robust PCA是一个非常常见的主要成分提取算法。RPCA本质其实是一个矩阵分解算法。目标是将输入X分解为X=L+S+E。L代表了X的low rank approximation（低秩估计）。而低秩估计本质就是将矩阵中相关性强的行投影到更低维的线性空间，实现了一个降维平滑的功能，同时剔除了冗余信息，提取了矩阵特征。提取完主要成分L后，获得了剩下的稀疏矩阵S，和噪点E。&lt;/p&gt;

&lt;p&gt;这里做异常检测的时候简单认为低秩矩阵L就能大部分还原输入序列。异常点的特征应该就表现在S或者E中。实际应用中可以把RPCA作为一个时间序列构造模型添加入EGADS中，用后者的异常检测模块提取异常。&lt;/p&gt;

&lt;h2 id=&quot;isolation-forest&quot;&gt;Isolation Forest&lt;/h2&gt;

&lt;p&gt;上面两个项目使用了若干种类的异常检测算法。如基于模型的（统计模型，线性模型）；基于距离的（K临近等聚类算法）；基于密度模型的（Extreme Low Density Model）。隔离森林（Isolation Forest）跟他们都有比较明显的区别。&lt;a href=&quot;http://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf?q=isolation-forest&quot;&gt;论文&lt;/a&gt; &lt;a href=&quot;http://sourceforge.net/projects/iforest/?source=navbar&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在训练阶段，小样本抽样更利于获得优质的分类结果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;因为不用计算点与点直接的距离，计算时间大大优于各种基于距离的算法。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;同样因为小样本抽样后迭代，时间、空间复杂度都可以维持在相当低的水平。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于上一点，iForest有能力处理超高维，超大规模的数据。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;iForest适用场景需要符合两个要求：1. 异常点非常少 2. 异常点的某些属性要跟正常点非常不同。&lt;/p&gt;

&lt;p&gt;iForest是基于随机森林的算法。对异常的分类能力基于两个假设：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;数据集中少数的异常点会形成少量的聚类。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;异常点具有明显不同的属性，使他们很快在分类中被区分出来。正常点很难被分类，而存在于树的更深层。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/iforest_depth_converge.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图横坐标表示了随机森林的迭代过程。选取一个异常点Xo和一个正常点Xi。纵轴代表了点Xo和Xi在迭代中被区分出时树深度的平均值。可以明显的看到，正常节点平均需要12次随机分类，而异常点只需要4次多就可以被区分出来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/iforest_cluster_sampling.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图展示了小规模随机抽样同样可以达到非常好的聚类效果。这在处理大规模数据的时候尤其有用，在多篇文章中，iForest因为这一特性被推荐为首选算法。实现方面有R，Java，Python，搜索一下就有。&lt;/p&gt;

&lt;h2 id=&quot;benchmarking-algorithms-for-detecting-anomalies-in-large-datasets&quot;&gt;BENCHMARKING ALGORITHMS FOR DETECTING ANOMALIES IN LARGE DATASETS&lt;/h2&gt;

&lt;p&gt;这篇&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.188.6153&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;论文&lt;/a&gt;使用了比较常见，简单易得的算法，基于学术界认可的标准数据集，进行了一系列性能，准确度试验，希望得到异常检测这一问题的一个基准。&lt;/p&gt;

&lt;p&gt;本文使用了以下几种算法，因为是调用的Weka，所以算是比较简单的试验。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;K邻近（K Nearest Neighbor）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;多层神经网络（Multi-layer Perceptron）
可以简单认为是一个复杂参数学习的分类器。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于密度的聚类算法：LOF (Local Outlier Factor)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;随机森林（Random Forest）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Isolation Forest&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;经过一系列试验，结论中推举了以下步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;如果是维度非常高的数据，用J48选Attribute。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用iForest预选异常点，标准为score &amp;gt; 0.50&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把ANN，J48，RF作为一个组合再处理2步得到的异常点。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;被较多算法标注为异常的点就认为有高可信度。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-2&quot;&gt;主要数据集&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html&quot;&gt;KDDCUP99&lt;/a&gt; 网络流数据。常用入侵检测数据，学术界大量使用。不过据说后来被证明不太可靠。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/numenta/NAB/tree/master/data&quot;&gt;Amazon监控数据&lt;/a&gt; Amazon EC2性能检测的真实检测数据，放出的数据有真实异常，并且有人工标注。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cert.org/insider-threat/tools/index.cfm&quot;&gt;内部威胁数据&lt;/a&gt; CERT人造的内部威胁数据。人造的方法还是比较科学的，不过异常模式比较简单，知道答案倒推就很容易。不过要自己发现异常就需要比较大的工作量了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/time-series-anomaly-detection/&quot;&gt;时间序列异常检测&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on July 30, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[知乎爬虫]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/zhihu-python-crawler/" />
  <id>http://wurui.cc/tech/zhihu-python-crawler</id>
  <published>2015-07-04T17:54:50+08:00</published>
  <updated>2015-07-04T17:54:50+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;一直没有写过爬虫程序。感觉都不只是遗憾而是一种缺失了。之前在知乎看到类似&lt;a href=&quot;http://www.zhihu.com/question/27621722&quot;&gt;“能利用爬虫技术做到哪些很酷很有趣很有用的事情？”&lt;/a&gt;，又一次激发了我玩一玩爬虫的兴趣。而爬虫的对象就用知乎好了，语言用我最近正在磨砺的Python。&lt;/p&gt;

&lt;p&gt;知乎作为知识问答式的网站有很强的社交属性。四月的时候知乎社区酝酿成熟，兴起了一波线下聚会。如何让本来陌生的参与者快速找到共同的痛点，轻松识别大小V？社交网络提供了很好的方法。&lt;/p&gt;

&lt;p&gt;先上效果图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/zhihu.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/zhihu/&quot;&gt;live demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用蓝色点表示用户，用橙色点表示问题。点与点的链接表示用户提出或者回答了某个问题。&lt;/li&gt;
  &lt;li&gt;用户的蓝点大小设置是根据关注数取log，既大V大点，小V小点。&lt;/li&gt;
  &lt;li&gt;鼠标在节点停留会显示名称，用户节点还会显示关注数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他也有一些可以有的功能，但是为了简化砍掉了。我认为一张图不宜包含过量的信息，而应该让用户保持关注核心信息。新式图表容易包含过量，过杂，或者维度过高的信息。这样看起来炫目，然而并不利于用户使用。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;实现细节&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Python爬虫现有成熟技术，使用 Beautiful Soup 4 解析 html 文档，使用 requests 处理 http 请求。可以预见已经有前辈做过知乎爬虫。在github搜索以后发现egrcc的&lt;a href=&quot;https://github.com/egrcc/zhihu-python&quot;&gt;zhihu-python&lt;/a&gt; fork数高达207。浏览代码以后发现egrcc已经把提取‘问题’，‘用户’，‘回答’等封装的很完美了。&lt;/p&gt;

&lt;p&gt;第一步，qq向‘椒Club’组织联络员小麦要到名单，只要id就可以了。&lt;/p&gt;

&lt;p&gt;然后遍历id，获得所以Users&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_url&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;分别获得每个user的提问和回答&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_answers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;asks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_asks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;为了简化图，强化社交熟悉，要求每个问题至少需要和两个以上用户产生链接。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ask&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;        
    &lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_question&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     
    &lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_question&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;questions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteritems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后我们将‘用户节点’，‘问题节点’，‘提问关系’，‘回答关系’一同写入json中，方便后面前段读取。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;write_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usersOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;askOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answerOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;源代码请访问&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/tree/master/zhihui-python&quot;&gt;github.com/colin1990324/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;前端部分&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;d3是我前端仅有的经验，这里使用d3.js的force directed graph。&lt;/p&gt;

&lt;p&gt;d3提供了d3.layout.force()来处理节点分布。d3.json()直接读取之前生成的图数据。&lt;/p&gt;

&lt;p&gt;然后就是添加边和点，这里注意分别设置大小，颜色，文本的提取。&lt;/p&gt;

&lt;p&gt;滑动条部分，根据id来显示id&amp;lt;=滑动条的点边，增加一点交互性。这里注意生成图数据的时候，边的Year一定要小于它链接的点的Year，不然就会出现无头边了。&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/zhihu-python-crawler/&quot;&gt;知乎爬虫&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on July 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[黄龙溪小游]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/huanglongxi/" />
  <id>http://wurui.cc/life/huanglongxi</id>
  <published>2015-06-29T22:35:24+08:00</published>
  <updated>2015-06-29T22:35:24+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5864-6150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5878-8150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;不时有竹筏往来湖水中，不下水湿身也得了亲近水的机会。荷花正好，伴着悠扬的乐曲，静静的享受夏日。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5863-5150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5876-7150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5843-4150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5889-9150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;园园今天颇有大家风范，车上安安静静，人多的地方也不乱跑乱吠。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5925-10150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5928-11150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5936-12150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5938-13150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5808-3150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;穿镇而过的河道，水浅而清澈，成了酷暑中的天堂。大人小孩都装备着水枪，你来我往，相互泼洒着欢乐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/exportIMG_5940-14150628.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;一根面，不知何时成了黄龙溪的标配了。夏日里，吃点凉粉凉面，实惠又巴适！&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/huanglongxi/&quot;&gt;黄龙溪小游&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on June 29, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[D3 实战练手]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/d3-js/" />
  <id>http://wurui.cc/tech/d3-js</id>
  <published>2015-06-17T09:21:17+08:00</published>
  <updated>2015-06-17T09:21:17+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;工作相关，了解流行的可视化库，（如百度echarts，GoogleCharts，Gephi等）最后还是&lt;a href=&quot;https://github.com/mbostock/d3/wiki/Gallery&quot;&gt;D3 Gallery&lt;/a&gt;的诸多Demo惊艳了我。简单介绍后带来我的实战。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3是一个基于数据操作文档JavaScript库。D3帮助你给数据带来活力通过使用HTML、SVG和CSS。D3重视Web标准为你提供现代浏览器的全部功能，而不是给你一个专有的框架。结合强大的可视化组件和数据驱动方式操作Dom。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3允许绑定任何数据到DOM对象模型，然后应用数据驱动转换到文档。例如：你可以用D3从数组生成HTML表格，或者使用相同数据平滑和动态创建一个SVG图表。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;D3不是一个庞大的框架，像想象那样提供许多功能。相反，D3解决这关键问题：基于数据文档高效操作。避免专有的表现，同时提供良好适应性。公开全部功能，如CSS3、HTML5和SVG网页标准，很少的开销，D3速度非常快。支持大数据集和动态交互和动画效果。D3的功能设计允许代码重用，通过集合不同的组件和插件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: right;&quot;&gt;引用自&lt;a href=&quot;http://segmentfault.com/a/1190000000701746&quot;&gt;小渝人儿&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;实战一 标签云&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/word_cloud.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/word-cloud/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;首先是数据准备，我用Java写了一个采集全站高频词的&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/WordCloud/WordFrequency.java&quot;&gt;程序&lt;/a&gt;，输出一个&amp;lt;单词，字号&amp;gt;的map，让高频的词有更大的字体。&lt;/p&gt;

&lt;p&gt;数据采集过程需要注意的是对中文进行分词，Stopwords的排除以及根据词频计算字号。&lt;/p&gt;

&lt;p&gt;然后我们使用D3的布局函数d3.layout.cloud.js。再根据map设置字号，颜色随机就可以了~&lt;/p&gt;

&lt;h3 id=&quot;sunburst&quot;&gt;实战二 Sunburst&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/sunburst.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/sunburst/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;sunburst不知道怎么翻译好，光芒？简而言之是一个圆盘的多级结构，也可以说是一个变异的树结构。&lt;/p&gt;

&lt;p&gt;同样写一个&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/Sunburst/Sunburst.java&quot;&gt;程序&lt;/a&gt;来获取数据。这次进步一点，把数据放在一个json文件中。这里我想展示一个博客-分类-文章的多级结构，最外圈每一个扇形的大小由文章的字节数来确定。内圈的累计计算由D3自动完成。&lt;/p&gt;

&lt;p&gt;绘制部分感谢&lt;a href=&quot;http://bl.ocks.org/mbostock/4348373&quot;&gt;bl.ocks.org&lt;/a&gt;，这次没有现成的layout，基本靠画圈圈来完成的。&lt;/p&gt;

&lt;p&gt;给每个部分加上标签坡费了我一番周折，最后还是没有理解mousemove事件返回的鼠标位置到底在哪儿，如果知道怎么调，欢迎留言。&lt;/p&gt;

&lt;h3 id=&quot;geo-map&quot;&gt;实战三 Geo Map&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/travel-china.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/travel-china/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在页面上绘制地图，这里每一条边都是现场绘制出来的哦。数据源请搜索“GeoJson china”（&lt;a href=&quot;https://github.com/colin1990324/colin1990324.github.io/tree/master/travel-china/Map_files&quot;&gt;懒人请进&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;源码简单易懂，值得一提的球体经纬度如何投影到二维平面上，这里使用常见的墨卡托投影。投影方式千奇百怪，世界中心到底在哪，有兴趣的同学可以&lt;a href=&quot;http://www.zhihu.com/question/27614116&quot;&gt;看一看&lt;/a&gt;。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mercator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;添加一个map，根据我到过的省份频次给不同区块上色。&lt;/p&gt;

&lt;p&gt;然后添加了简单的交互，类似刮刮乐，鼠标扫过便能揭开真相！&lt;/p&gt;

&lt;h3 id=&quot;chord-diagram&quot;&gt;实战四 Chord Diagram&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/chord.png&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:black; font-size: 100%; text-align: center;&quot;&gt;&lt;a href=&quot;http://wurui.cc/chord/&quot;&gt;Live Example: wurui.cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chord既是和弦的意思，第一次看到这种类型的图时简直闪瞎我的狗眼，惹得我非常想自己做一个。&lt;/p&gt;

&lt;p&gt;这个类型的图非常适合点对点的数据类型，比如&lt;a href=&quot;http://bost.ocks.org/mike/uberdata/&quot;&gt;Uber流量图&lt;/a&gt;。那我一个小博客，页面间跳转少的可怜，做个河图还可以，怎么也撑不起chord。哪里去找点对点的数据呢？最后我非常无耻的选择了pairwise document similarities。。。即博文间的相似度。。。。&lt;/p&gt;

&lt;p&gt;这里又用到一些简单的自然语言处理方法（包括前面的stopwords）。用TF-IDF建立向量，简单的用余弦值来作相似度。&lt;a href=&quot;https://github.com/colin1990324/DataVisualization/blob/master/src/chordDiagram/TfIdfMain.java&quot;&gt;程序&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D3提供现成的d3.layout.chord，调用即可，每条弦的宽度会根据你带入的值自动计算。再给不同分类的文章加上颜色，炫酷的Chord Diagram就出炉啦！&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;小结&lt;/h3&gt;

&lt;p&gt;四篇实战之后，对D3的select, layout, data import, text, event, 回调函数有了简单的认识。&lt;/p&gt;

&lt;p&gt;像我这样的前端小白也能成功做出一定的效果，这突显了D3的易用性。还没有体验过的朋友一定不要错过！做出了漂亮的效果也不要忘了留言分享哦~&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/d3-js/&quot;&gt;D3 实战练手&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on June 17, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[可视化网络 Gephi]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/gephi/" />
  <id>http://wurui.cc/tech/gephi</id>
  <published>2015-06-11T16:16:47+08:00</published>
  <updated>2015-06-11T16:16:47+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/firewall_sigma_circle.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gephi是一个全平台的交互式可视化平台，它特别适用于复杂的大数据可视化工作。&lt;a href=&quot;http://gephi.github.io/&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;实时可视化&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;http://gephi.github.io/images/screenshots/select-tool-mini.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gephi使用的高速引擎可以快速迭代出你想要的图像。&lt;/li&gt;
  &lt;li&gt;超大网络，从5w节点到100w节点都可以支持。&lt;/li&gt;
  &lt;li&gt;大量可用工具。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;高效简易的布局工具&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;http://gephi.github.io/images/screenshots/layout1.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对复杂图进行布局是一个困难的问题，而Gephi提供了最简易高效的布局算法。软件还支持在迭代的同时移动单个或是一片节点。你还可以在market中下载更多的plugin，其中也包括了来自不同开发者的其他布局算法。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gephi.github.io/features/&quot;&gt;简单翻译自 Gephi Features&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;快速入门&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gephi.github.io/tutorials/gephi-tutorial-quick_start.pdf&quot;&gt;原始文档&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;图数据导入&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;Gephi支持所有主流的图数据格式导入，例如GEFX，GraphML，GML。同时也支持简单的CSV格式导入，缺点是只认前三列，不方便添加Label或者其他属性。如果你在使用neo4j，可以使用neo4j-shell来导出图数据。如果以上方法都不合适，可以找到以上几种文件的格式，自己生产图文件。我有一些简单程序，有需要的可以留言。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.49.48%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;布局算法&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;在左下角有布局算法区，大可以随意尝试几种不同的算法和参数，点击run看看效果~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.50.10%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;常用的汇聚算法有ForceAtlas，ForceAtlas2。分散法有Fruchterman。如果是Community比较分散的情况，Yifan Hu有不错的效果。&lt;/p&gt;

&lt;p&gt;参数比较常用的有scale控制大小，speed控制迭代的速度和精度。有的算法也提供一个noverlap选项。&lt;/p&gt;

&lt;h4 id=&quot;ranking&quot;&gt;Ranking&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;左中部有常用的Ranking功能，此功能够对节点的小大，颜色；边的颜色，粗细进行调节。一般进行完布局和大小调节以后，你的图就有了一定的信息量和可读性了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.46.45%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;统计和分割&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;在窗口右边有各种统计功能，举个例子，像Modularity，能够对数据进行聚类，聚类的数据可以在子窗口调节。获得结果之后可以使用Ranking左边的Partition功能，这里提供根据之前的结果进行配色的方案。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.55.04%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;preview&quot;&gt;预览（Preview）&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;之前的操作都是在Overview视图中进行的，Gephi的预览视图提供了多套更为生动的整体配色模板。你也可以对具体的参数进行调节。在左下方有导出选项。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%204.58.34%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data-laboratory&quot;&gt;数据实验室（Data Laboratory）&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;数据实验室提供对具体数据进行操作的视图，然后并不怎么好用，推荐还是在生成导入文件的时候把需要的属性、标签都加入。Partition部分也支持使用标签来进行分类配色。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/colin1990324/Neo4j_EmailHeader/blob/master/data/image/Screen%20Shot%202015-06-11%20at%205.01.53%20PM.png?raw=true&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;sigmajs&quot;&gt;Sigma.js&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;如果你对sigma.js很熟悉，或者希望得到能够在网页动态展示的数据，或者neo4j的展示能力不能满足你的需要，那sigma plugin就很对你的胃口。文章第一张图和下面这张是我生成的图在sigma.js上展示的效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/firewall_sigma.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里要允许chrome从本地获取文件，在mac上的用法是 1 先关闭所有的chrome进程，2 带参数启动chrome。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/Applications/Google&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Chrome.app/Contents/MacOS/Google&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Chrome --allow-file-access-from-files&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/gephi/&quot;&gt;可视化网络 Gephi&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on June 11, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[New Domain and Web Site]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/tech/new-domain-and-web-site/" />
  <id>http://wurui.cc/tech/new-domain-and-web-site</id>
  <published>2015-05-27T17:06:02+08:00</published>
  <updated>2015-05-27T17:06:02+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;After the expiration of ruiwu.me, I’m looking for a new cheap solution for my personal blog. The original AWS EC2 &amp;amp; Wordpress solution is a little bit expensive for individuals and I know one of my friend &lt;a href=&quot;http://hackecho.com/&quot;&gt;Zhaoyu&lt;/a&gt; is using a Github &amp;amp; Jekyll solution. Since all those services are free and I bought the new domain wurui.cc for 7 years at the price 318 rmb, this solution should be easy and reasonable.&lt;/p&gt;

&lt;p&gt;So you can find lots of instructions for set up a blog on github.
Here gives the outline and some links I used.&lt;/p&gt;

&lt;h3 id=&quot;set-up-github&quot;&gt;Set up Github&lt;/h3&gt;

&lt;p&gt;If you don’t have a github account. &lt;a href=&quot;https://github.com/join&quot;&gt;Click&lt;/a&gt; to register.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/set-up-git/&quot;&gt;Github getting started&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;start-your-blog-from-fork&quot;&gt;Start your blog from fork&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2014/08/01/build-blog-jekyll-github-pages/&quot;&gt;Build A Blog With Jekyll And GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-theme-i-use&quot;&gt;The theme I use&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://mmistakes.github.io/so-simple-theme/theme-setup/&quot;&gt;So Simple Theme&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;getting-around&quot;&gt;Getting around&lt;/h3&gt;

&lt;p&gt;If you use plugins that are not officially supported, you need manualy deploy your pages. &lt;a href=&quot;http://www.sitepoint.com/jekyll-plugins-github/&quot;&gt;Here’s a way around&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found this one easier to understand later. &lt;a href=&quot;http://charliepark.org/jekyll-with-plugins/&quot;&gt;Charlie Park&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;import-from-your-old-wordpress-site&quot;&gt;import from your old Wordpress site&lt;/h3&gt;

&lt;p&gt;Here’s a nice tool &lt;a href=&quot;http://www.adamwadeharris.com/how-to-convert-a-wordpress-site-to-jekyll-with-github-pages/&quot;&gt;jekyll-import&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;cdn&quot;&gt;CDN&lt;/h3&gt;

&lt;p&gt;To speed up your website, especially in China.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://portal.qiniu.com/signup?code=3le7dkdy2ojf6&quot;&gt;七牛CDN&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;中文指南&lt;/h3&gt;

&lt;p&gt;qianjiye.de &lt;a href=&quot;http://qianjiye.de/2012/07/host-your-pages-at-github-using-jekyll/&quot;&gt;基于Jekyll的GitHub建站指南&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cellier.me &lt;a href=&quot;http://www.cellier.me/2015/01/04/jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/&quot;&gt;每个人都应该有一个Jekyll博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9leg.com &lt;a href=&quot;http://9leg.com/other/2015/01/15/optimization-of-jekyll-blog-access-slow-problem.html&quot;&gt;优化Jekyll博客访问慢的问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wuxiaolong.me &lt;a href=&quot;http://wuxiaolong.me/github/2014/10/30/qiniu-photo-bed/&quot;&gt;七牛做cdn加速或者做图床&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;liberize.me &lt;a href=&quot;http://liberize.me/tech/jekyll-add-back-to-top-button.html&quot;&gt;返回顶部按钮&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/tech/new-domain-and-web-site/&quot;&gt;New Domain and Web Site&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Hello World]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/blog/hello-world/" />
  <id>http://wurui.cc/blog/hello-world</id>
  <published>2015-05-27T15:39:55+08:00</published>
  <updated>2015-05-27T15:39:55+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;这是雏龙的一声怒吼，wurui.cc 今天上线啦！这标志着即上代主页ruiwu.me之后，更轻巧，更持久的新生主页的破壳而出，惊动天地，紫云东方！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/QR_Preview.png&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/blog/hello-world/&quot;&gt;Hello World&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Light Up]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/light-up/" />
  <id>http://wurui.cc/life/light-up</id>
  <published>2015-02-04T12:18:04+08:00</published>
  <updated>2015-02-04T12:18:04+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2015-35-17.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Feb 4th 2015, snow before sunset, street lamp just up, a quiet day at home. Photoed outside my apartment, Tara, Columbia, MO.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/light-up/&quot;&gt;Light Up&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on February 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[2014 MIZZOU Homecoming]]></title>
  <link rel="alternate" type="text/html" href="http://wurui.cc/life/2014-mizzou-homecoming/" />
  <id>http://wurui.cc/life/2014-mizzou-homecoming</id>
  <published>2015-02-04T12:17:38+08:00</published>
  <updated>2015-02-04T12:17:38+08:00</updated>
  <author>
    <name>Wu Rui</name>
    <uri>http://wurui.cc</uri>
    <email>ruiwu1990324@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;This Saturday we had the Homecoming Parade and I tried to comprehend a little bit of Documentary Photography.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-6.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-12.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-287.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-162.jpg&quot; alt=&quot;Model-View-Controller&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32-21.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014_32-193.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xjqmr.com1.z0.glb.clouddn.com/export_2014-32.jpg&quot; alt=&quot;Model-View-Controller&quot; /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://wurui.cc/life/2014-mizzou-homecoming/&quot;&gt;2014 MIZZOU Homecoming&lt;/a&gt; was originally published by Wu Rui at &lt;a href=&quot;http://wurui.cc&quot;&gt;Rui Makes&lt;/a&gt; on February 04, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>